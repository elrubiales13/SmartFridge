{"version":3,"sources":["components/ScanBarcodeButton.js","utils/supabaseClient.js","hook/useSupabaseData.js","components/AddProductForm.js","components/AddProductInventoryForm.js","components/ProductItem.js","components/ShoppingListItem.js","hook/useListaCompra.js","components/ExpiredProductItem.js","hook/useCaducados.js","components/SettingsModal.js","App.js","index.js"],"names":["ScanBarcodeButton","_ref","onScan","isScanning","setIsScanning","useState","status","setStatus","videoRef","useRef","handleDetected","result","code","codeResult","concat","stopScanner","Quagga","offDetected","stop","useEffect","React","createElement","className","onClick","startScanner","setTimeout","init","inputStream","type","target","current","document","querySelector","constraints","width","height","facingMode","decoder","readers","err","console","error","start","onDetected","ref","id","supabase","createClient","useSupabaseData","table","data","setData","loading","setLoading","async","from","select","fetchData","AddProductForm","onProductAdded","Inventario","product","setProduct","name","barcode","quantity","category","location","expiryDate","categorias","ubicaciones","eq","limit","message","length","existente","prev","_objectSpread","nombre","categoria_id","ubicacion_id","fecha_caducidad","buscarProductoPorCodigo","handleChange","e","value","[object Object]","parseInt","onSubmit","preventDefault","productoParaGuardar","codigo_barras","cantidad","productoCatalogo","errorCatalogo","errorInsertarCatalogo","insert","alert","existentes","buscarError","productoExistente","nuevaCantidad","updateError","update","insertError","onChange","required","min","map","cat","key","ubi","AddProductInventoryForm","codigoInicial","loadingCatalog","setLoadingCatalog","productoEnCatalogo","setProductoEnCatalogo","single","log","buscarEnCatalogo","errorBuscar","errorUpdate","errorInsert","placeholder","ProductItem","_product$categorias","_product$ubicaciones","onEdit","onDelete","onAddToShoppingList","daysLeft","calculateDaysLeft","diffTime","Date","Math","ceil","statusClass","statusText","toLocaleDateString","ShoppingListItem","onTogglePurchased","lista","useListaCompra","setLista","order","ascending","fetchLista","ExpiredProductItem","caducados","useCaducados","setCaducados","fetchCaducados","toISOString","split","dataCaducados","errorCaducados","SettingsModal","isOpen","onClose","newCategoria","setNewCategoria","newUbicacion","setNewUbicacion","setCategorias","setUbicaciones","categoriasData","ubicacionesData","trim","delete","deleteCategoria","deleteUbicacion","App","products","setProducts","shoppingList","setShoppingList","expiredProducts","setExpiredProducts","activeTab","setActiveTab","showAddForm","setShowAddForm","editingProduct","setEditingProduct","showAddInventoryForm","setShowAddInventoryForm","editingProductShopping","setEditingProductShopping","codigoEscaneado","setCodigoEscaneado","fetchProducts","fetchExpiredProducts","fetchShoppingList","revisarProductosCaducados","now","productos","filter","p","producto","nuevoId","toString","categoriaData","ubicacionData","existe","errorExiste","maybeSingle","es_caducado","handleEditProduct","categoria","ubicacion","handleDeleteProduct","productId","prevProducts","handleDeleteExpiredProduct","handleAddToShoppingList","creado","created_at","handleTogglePurchased","i","mostrarAjustes","setMostrarAjustes","Fragment","newProduct","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.c841ba29.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Quagga from 'quagga';\n\n  const ScanBarcodeButton = ({ onScan }) => {\n    const [isScanning, setIsScanning] = useState(false);\n    const [status, setStatus] = useState('');\n    const videoRef = useRef(null);\n\n    const startScanner = () => {\n    setIsScanning(true);\n    setStatus('Iniciando escáner...');\n\n    setTimeout(() => {\n      Quagga.init({\n        inputStream: {\n          type: 'LiveStream',\n          target: videoRef.current || document.querySelector('#video'),\n          constraints: {\n            width: 640,\n            height: 480,\n            facingMode: 'environment'\n          }\n        },\n        decoder: {\n          readers: ['ean_reader', 'code_128_reader', 'upc_reader']\n        }\n      }, (err) => {\n        if (err) {\n          console.error(err);\n          setStatus('Error al iniciar el escáner');\n          return;\n        }\n        Quagga.start();\n        setStatus('Escaneando...');\n      });\n\n      Quagga.onDetected(handleDetected);\n    }, 500); // Esperamos medio segundo para asegurar que el DOM esté listo\n  };\n\n  const handleDetected = (result) => {\n    const code = result.codeResult.code;\n    setStatus(`Código detectado: ${code}`);\n    onScan(code);\n    stopScanner();\n  };\n\n  const stopScanner = () => {\n    Quagga.offDetected(handleDetected);\n    Quagga.stop();\n    setIsScanning(false);\n    setStatus('');\n  };\n\n  useEffect(() => {\n    return () => {\n      if (isScanning) stopScanner();\n    };\n  }, [isScanning]);\n\n  return (\n    <div className=\"relative\">\n      <button \n        onClick={isScanning ? stopScanner : startScanner}\n        className={`py-2 px-4 rounded-lg transition-colors ${\n          isScanning \n            ? 'bg-red-500 hover:bg-red-600 text-white'\n            : 'bg-blue-500 hover:bg-blue-600 text-white'\n        }`}\n      >\n        {isScanning ? 'Cancelar Escaneo' : 'Escanear Código'}\n      </button>\n\n      <div className=\"text-sm text-gray-600 mt-1\">{status}</div>\n\n      {isScanning && (\n        <div className=\"fixed inset-0 bg-black z-50 flex flex-col items-center justify-center p-4\">\n          <div className=\"w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"text-lg font-bold text-white\">Escáner de Códigos</h2>\n              <button \n                onClick={stopScanner}\n                className=\"text-white text-xl p-2\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div\n              ref={videoRef}\n              className=\"relative w-full h-64 bg-black rounded-lg overflow-hidden\"\n              id=\"video\"\n            />\n\n            <div className=\"mt-4 text-center text-white\">\n              <p>Enfoca el código de barras dentro del cuadro</p>\n              <p className=\"text-yellow-300 font-medium mt-2\">{status}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScanBarcodeButton;","import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://qhfungoeldemkcnpqaiu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFoZnVuZ29lbGRlbWtjbnBxYWl1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg0OTIxNDEsImV4cCI6MjA2NDA2ODE0MX0.Cyy4kZm1rGvgez19hZWY1qQ7JwxcF__doLMqYl6Qa9E';\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n","// src/hooks/useSupabaseData.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useSupabaseData = (table) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data, error } = await supabase.from(table).select('*');\r\n      if (error) console.error(error);\r\n      else setData(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [table]);\r\n\r\n  return { data, loading };\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useSupabaseData } from '../hook/useSupabaseData';\n\nconst AddProductForm = ({ onProductAdded, Inventario = null }) => {\n  const [product, setProduct] = useState(Inventario || {\n    name: '',\n    barcode: '',\n    quantity: 1,\n    category: '',\n    location: '',\n    expiryDate: ''\n  });\n\n  const { data: categorias } = useSupabaseData('categorias');\n  const { data: ubicaciones } = useSupabaseData('ubicaciones');\n\n  // Buscar producto existente por código de barras\n  useEffect(() => {\n    const buscarProductoPorCodigo = async () => {\n      if (!product.barcode) return;\n\n      const { data, error } = await supabase\n        .from('catalogo_productos')\n        .select('*')\n        .eq('codigo_barras', product.barcode)\n        .limit(1);\n\n      if (error) {\n        console.error('Error buscando por código de barras:', error.message);\n        return;\n      }\n\n      if (data.length > 0) {\n        const existente = data[0];\n        setProduct(prev => ({\n          ...prev,\n          name: existente.nombre,\n          category: existente.categoria_id,\n          location: existente.ubicacion_id,\n          expiryDate: existente.fecha_caducidad\n        }));\n      }\n    };\n\n    buscarProductoPorCodigo();\n  }, [product.barcode]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prev => ({ ...prev, [name]: name === 'quantity' ? parseInt(value) : value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      fecha_caducidad: product.expiryDate,\n      categoria_id: product.category,\n      ubicacion_id: product.location,\n      cantidad: product.quantity\n    };\n\n    // Insertar en catálogo si no existe\n    const { data: productoCatalogo, error: errorCatalogo } = await supabase\n      .from('catalogo_productos')\n      .select('*')\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .limit(1);\n\n    if (errorCatalogo) {\n      console.error('❌ Error consultando catálogo:', errorCatalogo.message);\n    }\n\n    if (!productoCatalogo || productoCatalogo.length === 0) {\n      const { error: errorInsertarCatalogo } = await supabase\n        .from('catalogo_productos')\n        .insert([{\n          nombre: productoParaGuardar.nombre,\n          codigo_barras: productoParaGuardar.codigo_barras,\n          //categoria_id: productoParaGuardar.categoria_id\n        }]);\n\n      if (errorInsertarCatalogo) {\n        console.error('❌ Error al insertar en catálogo:', errorInsertarCatalogo.message);\n        alert('❌ No se pudo guardar el producto en el catálogo');\n        return;\n      }\n    }\n\n    // Verificar si ya existe el producto con el mismo nombre, código y fecha\n    const { data: existentes, error: buscarError } = await supabase\n      .from('productos')\n      .select('*')\n      .eq('nombre', productoParaGuardar.nombre)\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .eq('fecha_caducidad', productoParaGuardar.fecha_caducidad)\n      .limit(1);\n\n    if (buscarError) {\n      console.error('❌ Error buscando producto existente:', buscarError.message);\n      alert('❌ Error al buscar producto existente');\n      return;\n    }\n\n    if (existentes.length > 0) {\n      // Ya existe → sumamos cantidad\n      const productoExistente = existentes[0];\n      const nuevaCantidad = productoExistente.cantidad + productoParaGuardar.cantidad;\n\n      const { error: updateError } = await supabase\n        .from('productos')\n        .update({ cantidad: nuevaCantidad })\n        .eq('id', productoExistente.id);\n\n      if (updateError) {\n        console.error('❌ Error al actualizar cantidad:', updateError.message);\n        alert('❌ Error al actualizar el producto');\n        return;\n      }\n\n      alert('✅ Producto actualizado correctamente');\n    } else {\n      // No existe → insertamos\n      const { error: insertError } = await supabase\n        .from('productos')\n        .insert([productoParaGuardar]);\n\n      if (insertError) {\n        console.error('❌ Error al insertar:', insertError.message);\n        alert('❌ Error al guardar el producto');\n        return;\n      }\n\n      alert('✅ Producto insertado correctamente');\n    }\n\n    if (onProductAdded) onProductAdded();\n\n    setProduct({\n      name: '',\n      barcode: '',\n      quantity: 1,\n      category: '',\n      location: '',\n      expiryDate: ''\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Categoría</label>\n        <select\n          name=\"category\"\n          value={product.category}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        >\n          <option value=\"\">Seleccione una categoría</option>\n          {categorias.map((cat) => (\n            <option key={cat.id} value={cat.id}>{cat.nombre}</option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Ubicación</label>\n        <select\n          name=\"location\"\n          value={product.location}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        >\n          <option value=\"\">Seleccione una ubicación</option>\n          {ubicaciones.map((ubi) => (\n            <option key={ubi.id} value={ubi.id}>{ubi.nombre}</option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Fecha de Caducidad</label>\n        <input\n          type=\"date\"\n          name=\"expiryDate\"\n          value={product.expiryDate}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700\"\n      >\n        {Inventario ? 'Actualizar Producto' : 'Agregar Producto'}\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductForm;\n","import React, { useEffect, useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n\nconst AddProductInventoryForm = ({ onProductAdded, codigoInicial = '' }) => {\n  const [product, setProduct] = useState({\n    name: '',\n    barcode: codigoInicial,\n    quantity: 1\n  });\n\n  const [loadingCatalog, setLoadingCatalog] = useState(false);\n  const [productoEnCatalogo, setProductoEnCatalogo] = useState(false);\n\n  // Buscar el producto en catalogo_productos si hay un código escaneado\n  useEffect(() => {\n    const buscarEnCatalogo = async () => {\n      if (!codigoInicial) return;\n\n      setLoadingCatalog(true);\n      const { data, error } = await supabase\n        .from('catalogo_productos')\n        .select('nombre')\n        .eq('codigo_barras', codigoInicial)\n        .single();\n\n      if (error) {\n        console.log('🔍 Producto no encontrado en catálogo. Se puede añadir manualmente.');\n        setProductoEnCatalogo(false);\n        setProduct(prev => ({\n          ...prev,\n          barcode: codigoInicial,\n          name: ''\n        }));\n      } else {\n        console.log('✅ Producto encontrado en catálogo:', data.nombre);\n        setProductoEnCatalogo(true);\n        setProduct(prev => ({\n          ...prev,\n          barcode: codigoInicial,\n          name: data.nombre\n        }));\n      }\n\n      setLoadingCatalog(false);\n    };\n\n    buscarEnCatalogo();\n  }, [codigoInicial]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prev => ({\n      ...prev,\n      [name]: name === 'quantity' ? parseInt(value) : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      cantidad: product.quantity\n    };\n\n    // 1. Buscar si ya existe en lista_compra\n    const { data: existente, error: errorBuscar } = await supabase\n      .from('lista_compra')\n      .select('*')\n      .eq('nombre', productoParaGuardar.nombre)\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .single();\n\n    if (errorBuscar && errorBuscar.code !== 'PGRST116') {\n      // Código 116 = no se encontró nada, lo manejamos abajo\n      console.error('❌ Error al buscar producto existente:', errorBuscar.message);\n      alert('Error al comprobar duplicados');\n      return;\n    }\n\n    if (existente) {\n      // 2. Si existe → actualizar cantidad\n      const nuevaCantidad = existente.cantidad + productoParaGuardar.cantidad;\n\n      const { error: errorUpdate } = await supabase\n        .from('lista_compra')\n        .update({ cantidad: nuevaCantidad })\n        .eq('id', existente.id);\n\n      if (errorUpdate) {\n        console.error('❌ Error al actualizar cantidad:', errorUpdate.message);\n        alert('Error al actualizar el producto existente');\n        return;\n      }\n    } else {\n      // 3. Si no existe → insertar nuevo producto en lista_compra\n      const { error: errorInsert } = await supabase\n        .from('lista_compra')\n        .insert([productoParaGuardar]);\n\n      if (errorInsert) {\n        console.error('❌ Error al insertar nuevo producto:', errorInsert.message);\n        alert('Error al añadir el producto');\n        return;\n      }\n    }\n\n    // 4. Añadir a catalogo_productos si no está\n    if (!productoEnCatalogo) {\n      const { error: errorCatalogo } = await supabase.from('catalogo_productos').insert([\n        {\n          nombre: product.name,\n          codigo_barras: product.barcode\n        }\n      ]);\n\n      if (errorCatalogo) {\n        console.error('⚠️ Error al guardar en catálogo:', errorCatalogo.message);\n        alert('⚠️ El producto se guardó en la lista, pero no en el catálogo.');\n      }\n    }\n\n    if (onProductAdded) onProductAdded();\n    setProduct({ name: '', barcode: '', quantity: 1 });\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {loadingCatalog && <p className=\"text-sm text-gray-500\">Buscando en el catálogo...</p>}\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n          placeholder=\"Nombre del producto\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n          placeholder=\"Ej: 8431234567890\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700\"\n      >\n        Agregar Producto\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductInventoryForm;\n","import React from 'react';\nimport { Inventario } from '../components/Inventario';\n\nconst ProductItem = ({ product, onEdit, onDelete, onAddToShoppingList }) => {\n  const calculateDaysLeft = () => {\n    if (!product.fecha_caducidad) return null;\n    const expiry = new Date(product.fecha_caducidad);\n    const today = new Date();\n    const diffTime = expiry - today;\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  const daysLeft = calculateDaysLeft();\n  let statusClass = '';\n  let statusText = '';\n\n  if (daysLeft !== null) {\n    if (daysLeft < 0) {\n      statusClass = 'bg-red-200 text-red-800';\n      statusText = 'Caducado';\n    } else if (daysLeft <= 3) {\n      statusClass = 'bg-yellow-200 text-yellow-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    } else if (daysLeft <= 7) {\n      statusClass = 'bg-blue-200 text-blue-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    }\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-4 mb-4\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias?.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones?.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caduca: {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n        \n        {statusText && (\n          <span className={`px-2 py-1 text-xs font-semibold rounded-full ${statusClass}`}>\n            {statusText}\n          </span>\n        )}\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onEdit(product)}\n          className=\"text-sm bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\"\n        >\n          Editar\n        </button>\n        <button\n          onClick={() => onDelete(product.id)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n        {daysLeft !== null && daysLeft <= 0 && (\n          <button\n            onClick={() => onAddToShoppingList(product.id)}\n            className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n          >\n            Añadir a compras\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;","import React from 'react';\nimport { useListaCompra } from '../hook/useListaCompra';\n//import { supabase } from '../utils/supabaseClient';\n\nconst ShoppingListItem = ({product, onTogglePurchased}) => {\n  const { lista, loading } = useListaCompra();\n\n  if (loading) return <p>Cargando lista de la compra...</p>;\n  if (lista.length === 0) return <p>No hay productos en tu cesta.</p>;\n  return (\n       \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-green-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n        </div>\n      </div>\n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onTogglePurchased(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Comprado\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingListItem;\n","// src/hook/useListaCompra.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useListaCompra = () => {\r\n  const [lista, setLista] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLista = async () => {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('lista_compra')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error al obtener lista de compra:', error.message);\r\n      } else {\r\n        setLista(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchLista();\r\n  }, []);\r\n\r\n  return { lista, loading };\r\n};\r\n","import React from 'react';\nimport { useCaducados } from '../hook/useCaducados';\n//import { supabase } from '../utils/supabaseClient';\n\nconst ExpiredProductItem = ({product, onDelete, onAddToShoppingList}) => {\n  const { caducados, loading} = useCaducados();\n\n\n\n  if (loading) return <p>Cargando productos caducados...</p>;\n  if (caducados.length === 0) return <p>No hay productos caducados.</p>;\n  //console.log('Renderizando producto:', product);\n  return (\n    \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-red-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          \n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caducó el:{' '}\n              {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n\n        <span className=\"px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\n          Caducado\n        </span>\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onAddToShoppingList(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Añadir a compras\n        </button>\n        <button\n          onClick={() => onDelete(product)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default ExpiredProductItem;\n\n","// src/hook/useCaducados.js\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useCaducados = () => {\r\n  const [caducados, setCaducados] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchCaducados = async () => {\r\n    // Solo continuar si no hemos cargado antes\r\n    if (caducados.length > 0) return;\r\n\r\n    setLoading(true);\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    // Consulta SOLO los productos caducados\r\n    const { data: dataCaducados, error: errorCaducados } = await supabase\r\n      .from('caducados')\r\n      .select('*');\r\n   \r\n    if (errorCaducados) {\r\n      console.error('Error al cargar productos caducados:', errorCaducados);\r\n      setCaducados([]);\r\n    } else {\r\n      setCaducados(dataCaducados);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCaducados();\r\n  }, []);\r\n\r\n  return { caducados, loading, fetchCaducados, setCaducados };\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const SettingsModal = ({ isOpen, onClose }) => {\r\n  const [newCategoria, setNewCategoria] = useState('');\r\n  const [newUbicacion, setNewUbicacion] = useState('');\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const { data: categoriasData } = await supabase.from('categorias').select('*');\r\n    const { data: ubicacionesData } = await supabase.from('ubicaciones').select('*');\r\n    setCategorias(categoriasData || []);\r\n    setUbicaciones(ubicacionesData || []);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    if (isOpen) {\r\n      fetchData();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleAddCategoria = async () => {\r\n    if (newCategoria.trim() === '') return;\r\n    await supabase.from('categorias').insert([{ nombre: newCategoria.trim() }]);\r\n    setNewCategoria('');\r\n    fetchData();\r\n  };\r\n\r\n  const handleAddUbicacion = async () => {\r\n    if (newUbicacion.trim() === '') return;\r\n    await supabase.from('ubicaciones').insert([{ nombre: newUbicacion.trim() }]);\r\n    setNewUbicacion('');\r\n    fetchData();\r\n  };\r\n\r\n  const deleteCategoria = async (id) => {\r\n    await supabase.from('categorias').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n  const deleteUbicacion = async (id) => {\r\n    await supabase.from('ubicaciones').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md max-h-[90vh] flex flex-col\">\r\n        {/* <button\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\r\n        >\r\n          ✕\r\n        </button>*/}\r\n        {/* Encabezado */}\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800\">Ajustes</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-red-600 text-xl font-bold\">\r\n            &times;\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Contenido desplazable */}\r\n        <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n          {/* Tu formulario de añadir categoría/ubicación y las listas existentes */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir categoría */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Categoría</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCategoria}\r\n                  onChange={(e) => setNewCategoria(e.target.value)}\r\n                  className=\"w-full border border-gray-300 rounded text-gray-700 px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddCategoria}\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                >\r\n                  Añadir Categoría\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de categorías */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Categorías existentes</h3>\r\n              <ul className=\"space-y-1 mb-4\">\r\n                {categorias.map((cat) => (\r\n                  <li key={cat.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{cat.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteCategoria(cat.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir ubicación */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Ubicación</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newUbicacion}\r\n                  onChange={(e) => setNewUbicacion(e.target.value)}\r\n                  className=\"w-full border border-gray-300 text-gray-700 rounded px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddUbicacion}\r\n                  className=\"mt-2 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                >\r\n                  Añadir Ubicación\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de ubicaciones */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Ubicaciones existentes</h3>\r\n              <ul className=\"space-y-1\">\r\n                {ubicaciones.map((ubi) => (\r\n                  <li key={ubi.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{ubi.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteUbicacion(ubi.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        \r\n        {/* Pie opcional */}\r\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\r\n          © SmartFridge\r\n        </div>\r\n      </div>\r\n    </div> \r\n        \r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\n//import Inventario from './components/Inventario';\nimport ScanBarcodeButton from './components/ScanBarcodeButton';\nimport AddProductForm from './components/AddProductForm';\nimport AddProductInventoryForm from './components/AddProductInventoryForm';\nimport ProductItem from './components/ProductItem';\nimport ShoppingListItem from './components/ShoppingListItem';\nimport ExpiredProductItem from './components/ExpiredProductItem';\n//import { calculateDaysLeft } from './utils/productHelpers';\nimport { SettingsModal } from './components/SettingsModal';\nimport { supabase } from './utils/supabaseClient';\n\n\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [shoppingList, setShoppingList] = useState([]);\n  const [expiredProducts, setExpiredProducts] = useState([]);\n  const [activeTab, setActiveTab] = useState('inventory');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [showAddInventoryForm, setShowAddInventoryForm] = useState(false);\n  const [editingProductShopping, setEditingProductShopping] = useState(null);\n  const [codigoEscaneado, setCodigoEscaneado] = useState('');\n\n\n  \n  const fetchProducts = async () => {\n    const { data, error } = await supabase.from('productos').select(\"id, nombre, codigo_barras, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n    if (!error) {\n      setProducts(data);\n    }\n  };\n\n  const fetchExpiredProducts = async () => {\n    const { data, error } = await supabase\n      .from('caducados')\n      .select(\"id, nombre, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n\n    if (!error) {\n      setExpiredProducts(data);\n    }\n  };\n\n  const fetchShoppingList = async () => {\n    const { data, error } = await supabase\n      .from('lista_compra')\n      .select(\"*\");\n\n    if (!error) {\n      setShoppingList(data);\n    }\n  };\n\n  if (activeTab === 'shopping'){\n    fetchShoppingList();\n  }\n  if (activeTab === 'inventory'){\n    fetchProducts();\n  }\n  if (activeTab === 'expired'){\n    fetchExpiredProducts();\n  }\n\n  useEffect(() => {\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n    revisarProductosCaducados();\n  }, []);\n\n  // Efecto para manejar productos caducados\n  \n  const revisarProductosCaducados = async () => {\n    const now = new Date();\n\n    const { data: productos, error } = await supabase\n      .from('productos')\n      .select('*');\n\n    if (error) {\n      console.error('Error al obtener productos:', error.message);\n      return;\n    }\n\n    const caducados = productos.filter(p => new Date(p.fecha_caducidad) < now);\n    //const vigentes = productos.filter(p => new Date(p.fecha_caducidad) >= now);\n\n    // Eliminar los caducados del inventario\n    for (const producto of caducados) {\n      await supabase.from('productos').delete().eq('id', producto.id);\n    }\n\n    // Agregarlos a 'lista_compra' y 'caducados'\n    const nuevoId = Date.now().toString();\n    \n\n    for (const producto of caducados) {\n      // Obtener nombre de categoría\n      const { data: categoriaData } = await supabase\n        .from('categorias')\n        .select('nombre')\n        .eq('id', producto.categoria_id)\n        .single();\n\n      //const categoriaNombre = categoriaData?.nombre || '';\n\n      // Obtener nombre de ubicación\n      const { data: ubicacionData } = await supabase\n        .from('ubicaciones')\n        .select('nombre')\n        .eq('id', producto.ubicacion_id)\n        .single();\n\n      //const ubicacionNombre = ubicacionData?.nombre || '';\n\n      const { data: existe, error: errorExiste } = await supabase\n        .from('lista_compra')\n        .select('id')\n        .eq('codigo_barras', producto.codigo_barras)\n        .eq('es_caducado', true)\n        .maybeSingle();\n\n      if (!existe) {\n        \n        await supabase.from('lista_compra').insert([{\n          id: nuevoId,\n          ...producto,\n          es_caducado: true,\n        }]);\n      }\n\n\n      // Insertar en caducados\n      const yaExiste = await supabase\n        .from('caducados')\n        .select('id')\n        .eq('nombre', producto.nombre)\n        .eq('codigo_barras', producto.codigo_barras)\n        .eq('fecha_caducidad', producto.fecha_caducidad);\n\n      if (yaExiste.data.length === 0) {\n        await supabase.from('caducados').insert({\n          nombre: producto.nombre,\n          cantidad: producto.cantidad,\n          codigo_barras: producto.codigo_barras,\n          fecha_caducidad: producto.fecha_caducidad,\n          categoria_id: producto.categoria_id,\n          ubicacion_id: producto.ubicacion_id\n      });\n      }\n    }\n\n    // Recarga de estado tras limpieza\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n  };\n\n\n  const handleScan = (barcode) => {\n    setShowAddForm(true);\n    setEditingProduct({\n      name: '',\n      barcode,\n      quantity: 1,\n      category: 'otros',\n      location: 'despensa-estante1',\n      expiryDate: ''\n    });\n  };\n\n  const handleAddProduct = (newProduct) => {\n    if (editingProduct && editingProduct.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProduct.id ? { ...newProduct, id: editingProduct.id } : p\n      ));\n    } else {\n      // Añadir nuevo producto\n      setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchProducts();\n    setShowAddForm(false);\n    setEditingProduct(null);\n    revisarProductosCaducados();\n  };\n\n  const handleScanShopping = (codigo) => {\n    setCodigoEscaneado(codigo);\n    setShowAddInventoryForm(true);\n  };\n  \n  const handleAddInventoryProduct = (newProduct) => {\n    if (editingProductShopping && editingProductShopping.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProductShopping.id ? { ...newProduct, id: editingProductShopping.id } : p\n      ));\n    } else {\n    // Añadir nuevo producto a la lista de la compra.\n    setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchShoppingList();\n    setEditingProductShopping(null);\n    setShowAddInventoryForm(false);\n  };\n\n  const handleEditProduct = (product) => {\n    console.log('📝 Editando producto:', product);\n    setEditingProduct({\n    ...product,\n    name: product.nombre,\n    barcode: product.codigo_barras,\n    quantity: product.cantidad,\n    expiryDate: product.fecha_caducidad,\n    category: product.categoria,\n    location: product.ubicacion\n    });\n    setShowAddForm(true);\n  };\n\n  const handleDeleteProduct = async (productId) => {\n    const { error } = await supabase\n    .from('productos')\n    .delete()\n    .eq('id', productId);\n\n    if (error) {\n      console.error('❌ Error al eliminar producto:', error.message);\n      alert('❌ No se pudo eliminar el producto');\n    } else {\n      // Eliminarlo del estado para actualizar la vista\n      setProducts((prevProducts) => prevProducts.filter(p => p.id !== productId));\n    }\n    fetchProducts();\n  };\n  \n\n  const handleDeleteExpiredProduct = async (product) => {\n    const { error } = await supabase\n      .from('caducados')\n      .delete()\n      .eq('id', product.id);\n\n    if (!error) {\n      setExpiredProducts(prev => prev.filter(p => p.id !== product.id));\n    }\n    fetchExpiredProducts();\n  };\n\n  const handleAddToShoppingList = async (product) => {\n    const yaExiste = await supabase\n      .from('caducados')\n      .select('id')\n      .eq('nombre', product.nombre)\n      .eq('codigo_barras', product.codigo_barras)\n      .eq('fecha_caducidad', product.fecha_caducidad);\n\n    if (yaExiste.data.length === 0) {\n      await supabase.from('lista_compra').insert({\n        nombre: product.nombre,\n        cantidad: product.cantidad,\n        codigo_barras: product.codigo_barras,\n        fecha_caducidad: product.fecha_caducidad,\n        categoria_id: product.categoria_id,\n        ubicacion_id: product.ubicacion_id,\n        creado: product.created_at,\n        es_caducado: true\n      });\n    }\n  };\n\n  const handleAddManualItem = () => {\n    setShowAddInventoryForm(true);\n  };\n\n\n  const handleTogglePurchased = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .delete()\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n  const [mostrarAjustes, setMostrarAjustes] = useState(false);\n  \n\n  return (\n    <div className=\"min-h-screen bg-gray-800 p-4\">\n      <div className=\"max-w-6xl mx-auto bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"p-4 bg-blue-600 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">SmartFridge</h1>\n            <button\n              onClick={() => setMostrarAjustes(true)}\n              className=\"bg-gray-700 text-white px-3 py-2 rounded hover:bg-gray-700\"\n            >\n              ⚙️ Ajustes\n            </button>\n          </div>\n          \n          <p className=\"text-blue-100\">Control total de tu cocina</p>\n          \n\n          {mostrarAjustes && <SettingsModal onClose={() => setMostrarAjustes(false)} />}\n          \n        </div>\n        \n        <div className=\"flex border-b\">\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'inventory' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('inventory')}\n          >\n            Inventario\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'shopping' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('shopping')}\n          >\n            Lista de la compra\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'expired' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('expired')}\n          >\n            Caducados ({expiredProducts.length})\n          </button>\n        </div>\n        \n        <div className=\"p-4\">\n          {activeTab === 'inventory' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={handleScan} />\n                <button\n                  onClick={() => {\n                    setShowAddForm(true);\n                    setEditingProduct(null);\n                    fetchProducts();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Manualmente\n                </button>\n              </div>\n              \n              {showAddForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductForm onProductAdded={handleAddProduct} \n                    Inventario={editingProduct} \n                  />\n\n                  <button\n                    onClick={() => {\n                      setShowAddForm(false);\n                      setEditingProduct(null);\n                      fetchProducts();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              \n              <div className=\"space-y-4\">\n                {products.length === 0 ? (\n                  <p className=\"text-gray-500\">No hay productos en tu inventario. ¡Añade algunos!</p>\n                ) : (\n                  \n                  products.map(product => (\n                    <ProductItem\n                      key={product.id}\n                      product={product}\n                      onEdit={handleEditProduct}\n                      onDelete={handleDeleteProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                  \n                )}\n                \n              </div>\n            </>\n          ) : activeTab === 'shopping' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={(code) => {\n                  setCodigoEscaneado(code);\n                  setShowAddInventoryForm(true);\n                }} />\n                <button\n                  onClick={() => {\n                    setShowAddInventoryForm(true);\n                    setCodigoEscaneado('');\n                    setEditingProductShopping(null);\n                    fetchShoppingList();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Producto\n                </button>\n              </div>\n              {showAddInventoryForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductInventoryForm\n                    codigoInicial={codigoEscaneado}\n                    onProductAdded={() => {\n                      setShowAddInventoryForm(false);\n                      setCodigoEscaneado('');\n                      fetchShoppingList(); // si quieres refrescar después de añadir\n                    }}\n                  />\n                  <button\n                    onClick={() => {\n                      setShowAddInventoryForm(false);\n                      fetchShoppingList();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              <div className=\"space-y-4\">\n                \n                {shoppingList.length === 0 ? (\n                  <p className=\"text-gray-500\">Tu lista de la compra está vacía. ¡Añade algunos productos!</p>\n                ) : (\n                  shoppingList.map(product => (\n                    <ShoppingListItem\n                      key={product.id}\n                      product={product}\n                      onTogglePurchased={handleTogglePurchased}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              <h2 className=\"text-xl font-semibold mb-4\">Productos Caducados</h2>\n              \n              <div className=\"space-y-4\">\n                {expiredProducts.length === 0 ? (\n                  <p className=\"text-gray-500\">¡Genial! No tienes productos caducados.</p>\n                ) : (\n                  \n                  expiredProducts.map(product => (\n                    <ExpiredProductItem\n                      key={product.id}\n                      product={product}\n                      onDelete={handleDeleteExpiredProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          )}\n        </div>\n        {/* Pie opcional */}\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\n          © SmartFridge\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  //<StrictMode>\n  <App />\n  //</StrictMode>\n);"],"sourceRoot":""}