{"version":3,"sources":["components/ScanBarcodeButton.js","utils/supabaseClient.js","hook/useSupabaseData.js","components/AddProductForm.js","components/AddProductInventoryForm.js","components/ProductItem.js","components/ShoppingListItem.js","hook/useListaCompra.js","components/ExpiredProductItem.js","hook/useCaducados.js","components/SettingsModal.js","components/ProductSearchBar.js","App.js","index.js"],"names":["ScanBarcodeButton","_ref","onScan","isScanning","setIsScanning","useState","status","setStatus","facingMode","setFacingMode","videoRef","useRef","beepSound","Audio","startScanner","setTimeout","Quagga","init","inputStream","type","target","current","document","querySelector","constraints","width","height","decoder","readers","err","console","error","start","onDetected","handleDetected","stopScanner","offDetected","stop","result","code","codeResult","concat","play","catch","e","log","useEffect","React","createElement","className","onClick","toggleCamera","title","ref","id","supabase","createClient","useSupabaseData","table","data","setData","loading","setLoading","async","from","select","fetchData","AddProductForm","_product$name","_product$barcode","_product$quantity","_product$category","_product$location","_product$expiryDate","onProductAdded","Inventario","product","setProduct","name","barcode","quantity","category","location","expiryDate","categorias","ubicaciones","eq","limit","message","length","existente","prev","_objectSpread","nombre","categoria_id","ubicacion_id","fecha_caducidad","buscarProductoPorCodigo","handleChange","value","qty","parseInt","[object Object]","onSubmit","preventDefault","productoParaGuardar","codigo_barras","cantidad","productoCatalogo","errorCatalogo","errorInsertarCatalogo","insert","alert","updateError","update","existentes","fetchError","productoExistente","nuevaCantidad","insertError","onChange","required","min","map","cat","key","ubi","AddProductInventoryForm","codigoInicial","loadingCatalog","setLoadingCatalog","productoEnCatalogo","setProductoEnCatalogo","trim","single","buscarEnCatalogo","errorBuscar","errorUpdate","errorInsert","placeholder","ProductItem","_product$categorias","_product$ubicaciones","onEdit","onDelete","onAddToShoppingList","onTogglePlus","onToggleMinus","daysLeft","calculateDaysLeft","diffTime","Date","Math","ceil","statusClass","statusText","toLocaleDateString","ShoppingListItem","onTogglePurchased","lista","useListaCompra","setLista","order","ascending","fetchLista","ExpiredProductItem","caducados","useCaducados","setCaducados","fetchCaducados","toISOString","split","dataCaducados","errorCaducados","SettingsModal","isOpen","onClose","newCategoria","setNewCategoria","newUbicacion","setNewUbicacion","setCategorias","setUbicaciones","categoriasData","ubicacionesData","delete","deleteCategoria","deleteUbicacion","ProductSearchBar","onResults","query","setQuery","categoriaId","setCategoriaId","ubicacionId","setUbicacionId","fetchFilters","c","u","queryBase","or","productos","enCatalogo","role","App","products","setProducts","shoppingList","setShoppingList","expiredProducts","setExpiredProducts","activeTab","setActiveTab","showAddForm","setShowAddForm","editingProduct","setEditingProduct","showAddInventoryForm","setShowAddInventoryForm","editingProductShopping","setEditingProductShopping","codigoEscaneado","setCodigoEscaneado","fetchProducts","fetchExpiredProducts","fetchShoppingList","revisarProductosCaducados","now","filter","p","producto","nuevoId","toString","categoriaData","ubicacionData","existe","errorExiste","maybeSingle","es_caducado","handleEditProduct","window","scrollTo","top","behavior","handleDeleteProduct","productId","prevProducts","handleDeleteExpiredProduct","handleAddToShoppingList","creado","created_at","handleTogglePurchased","i","handleAddQuantity","handleSubstractQuantity","handleAddQuantityInventario","searchResults","nuevosResultados","setSearchResults","handleSubstractQuantityInventario","mostrarAjustes","setMostrarAjustes","catalogMatch","setCatalogMatch","searchTerm","setSearchTerm","Fragment","resultados","catalogoArray","termino","Array","isArray","newProduct","prod","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.345ab805.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Quagga from 'quagga';\n\nconst ScanBarcodeButton = ({ onScan }) => {\n  const [isScanning, setIsScanning] = useState(false);\n  const [status, setStatus] = useState('');\n  const [facingMode, setFacingMode] = useState('environment'); // 👈 Estado para cámara\n  const videoRef = useRef(null);\n\n  const beepSound = new Audio('scanner-beep.mp3'); // si está en /public\n\n  const startScanner = () => {\n    setIsScanning(true);\n    setStatus('Iniciando escáner...');\n\n    setTimeout(() => {\n      Quagga.init({\n        inputStream: {\n          type: 'LiveStream',\n          target: videoRef.current || document.querySelector('#video'),\n          constraints: {\n            width: 640,\n            height: 480,\n            facingMode: facingMode // 👈 Usa estado dinámico\n          }\n        },\n        decoder: {\n          readers: ['ean_reader', 'code_128_reader', 'upc_reader']\n        }\n      }, (err) => {\n        if (err) {\n          console.error(err);\n          setStatus('Error al iniciar el escáner');\n          return;\n        }\n        Quagga.start();\n        setStatus('Escaneando...');\n      });\n\n      Quagga.onDetected(handleDetected);\n    }, 500);\n  };\n\n  const stopScanner = () => {\n    Quagga.offDetected(handleDetected);\n    Quagga.stop();\n    setIsScanning(false);\n    setStatus('');\n  };\n\n  const toggleCamera = () => {\n    const nuevoModo = facingMode === 'environment' ? 'user' : 'environment';\n    setFacingMode(nuevoModo);\n\n    // Reiniciar escáner con nueva cámara\n    if (isScanning) {\n      stopScanner();\n      setTimeout(startScanner, 500);\n    }\n  };\n\n  const handleDetected = (result) => {\n    const code = result.codeResult.code;\n    setStatus(`Código detectado: ${code}`);\n    onScan(code);\n    beepSound.play().catch(e => console.log('🔇 No se pudo reproducir el sonido:', e));\n    stopScanner();\n  };\n\n  useEffect(() => {\n    return () => {\n      if (isScanning) stopScanner();\n    };\n  }, [isScanning]);\n\n  return (\n    <div className=\"relative\">\n      <button \n        onClick={isScanning ? stopScanner : startScanner}\n        className={`py-2 px-4 rounded-lg transition-colors ${\n          isScanning \n            ? 'bg-red-500 hover:bg-red-600 text-white'\n            : 'bg-blue-500 hover:bg-blue-600 text-white'\n        }`}\n      >\n        {isScanning ? 'Cancelar Escaneo' : 'Escanear Código'}\n      </button>\n\n      <div className=\"text-sm text-gray-600 mt-1\">{status}</div>\n\n      {isScanning && (\n        <div className=\"fixed inset-0 bg-black z-50 flex flex-col items-center justify-center p-4\">\n          <div className=\"w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"text-lg font-bold text-white\">Escáner de códigos</h2>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={toggleCamera}\n                  className=\"text-white text-xl p-2\"\n                  title=\"Cambiar cámara\"\n                >\n                  🔁\n                </button>\n                <button \n                  onClick={stopScanner}\n                  className=\"text-white text-xl p-2\"\n                  title=\"Cerrar escáner\"\n                >\n                  ✕\n                </button>\n              </div>\n            </div>\n\n            <div\n              ref={videoRef}\n              className=\"relative w-full h-64 bg-black rounded-lg overflow-hidden\"\n              id=\"video\"\n            >\n              <div className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\n                <div className=\"border-2 border-red-400 w-64 h-40 relative\">\n                  <div className=\"absolute -top-1 -left-1 w-4 h-4 border-t-2 border-l-2 border-red-400\"></div>\n                  <div className=\"absolute -top-1 -right-1 w-4 h-4 border-t-2 border-r-2 border-red-400\"></div>\n                  <div className=\"absolute -bottom-1 -left-1 w-4 h-4 border-b-2 border-l-2 border-red-400\"></div>\n                  <div className=\"absolute -bottom-1 -right-1 w-4 h-4 border-b-2 border-r-2 border-red-400\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-4 text-center text-white\">\n              <p>Enfoca el código de barras dentro del cuadro</p>\n              <p className=\"text-yellow-300 font-medium mt-2\">{status}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScanBarcodeButton;\n","import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://qhfungoeldemkcnpqaiu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFoZnVuZ29lbGRlbWtjbnBxYWl1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg0OTIxNDEsImV4cCI6MjA2NDA2ODE0MX0.Cyy4kZm1rGvgez19hZWY1qQ7JwxcF__doLMqYl6Qa9E';\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n","// src/hooks/useSupabaseData.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useSupabaseData = (table) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data, error } = await supabase.from(table).select('*');\r\n      if (error) console.error(error);\r\n      else setData(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [table]);\r\n\r\n  return { data, loading };\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useSupabaseData } from '../hook/useSupabaseData';\n\nconst AddProductForm = ({ onProductAdded, Inventario = null }) => {\n  const [product, setProduct] = useState(Inventario || {\n    id: '',\n    name: '',\n    barcode: '',\n    quantity: 1,\n    category: '',\n    location: '',\n    expiryDate: ''\n  });\n\n  const { data: categorias } = useSupabaseData('categorias');\n  const { data: ubicaciones } = useSupabaseData('ubicaciones');\n\n  useEffect(() => {\n    const buscarProductoPorCodigo = async () => {\n      if (!product.barcode) return;\n\n      const { data, error } = await supabase\n        .from('catalogo_productos')\n        .select('*')\n        .eq('codigo_barras', product.barcode)\n        .limit(1);\n\n      if (error) {\n        console.error('Error buscando por código de barras:', error.message);\n        return;\n      }\n\n      if (data.length > 0) {\n        const existente = data[0];\n        setProduct(prev => ({\n          ...prev,\n          name: existente.nombre,\n          category: existente.categoria_id,\n          location: existente.ubicacion_id,\n          expiryDate: existente.fecha_caducidad\n        }));\n      }\n    };\n\n    buscarProductoPorCodigo();\n  }, [product.barcode]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'quantity') {\n      const qty = value === '' ? '' : parseInt(value, 10);\n      setProduct(prev => ({ ...prev, quantity: qty }));\n    } else {\n      setProduct(prev => ({ ...prev, [name]: value }));\n    }\n\n    {/*setProduct(prev => ({\n      ...prev,\n      [name]: name === 'quantity' ? parseInt(value) : value\n    }));*/}\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      fecha_caducidad: product.expiryDate,\n      categoria_id: product.category,\n      ubicacion_id: product.location,\n      cantidad: product.quantity\n    };\n\n    // Insertar en catálogo si no existe\n    const { data: productoCatalogo, error: errorCatalogo } = await supabase\n      .from('catalogo_productos')\n      .select('*')\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .limit(1);\n\n    if (errorCatalogo) {\n      console.error('❌ Error consultando catálogo:', errorCatalogo.message);\n    }\n\n    if (!productoCatalogo || productoCatalogo.length === 0) {\n      const { error: errorInsertarCatalogo } = await supabase\n        .from('catalogo_productos')\n        .insert([{\n          nombre: productoParaGuardar.nombre,\n          codigo_barras: productoParaGuardar.codigo_barras,\n        }]);\n\n      if (errorInsertarCatalogo) {\n        console.error('❌ Error al insertar en catálogo:', errorInsertarCatalogo.message);\n        alert('❌ No se pudo guardar el producto en el catálogo');\n        return;\n      }\n    }\n\n    if (Inventario && Inventario.id) {\n      // Modo edición → actualizar cantidad directamente\n      const { error: updateError } = await supabase\n        .from('productos')\n        .update({\n          nombre: productoParaGuardar.nombre,\n          codigo_barras: productoParaGuardar.codigo_barras,\n          fecha_caducidad: productoParaGuardar.fecha_caducidad,\n          categoria_id: productoParaGuardar.categoria_id,\n          ubicacion_id: productoParaGuardar.ubicacion_id,\n          cantidad: productoParaGuardar.cantidad\n        })\n        .eq('id', Inventario.id);\n\n      if (updateError) {\n        console.error('❌ Error al actualizar producto:', updateError.message);\n        alert('❌ Error al actualizar el producto');\n        return;\n      }\n\n      alert('✅ Producto actualizado correctamente');\n    } else {\n      // Modo nuevo → comprobar si ya existe\n      const { data: existentes, error: fetchError } = await supabase\n        .from('productos')\n        .select('id, cantidad')\n        .eq('codigo_barras', productoParaGuardar.codigo_barras)\n        .eq('nombre', productoParaGuardar.nombre)\n\n      if (fetchError) {\n        console.error('❌ Error al buscar producto existente:', fetchError.message);\n        alert('❌ Error buscando productos existentes');\n        return;\n      }\n\n      if (existentes.length > 0) {\n        const productoExistente = existentes[0];\n        const nuevaCantidad = productoExistente.cantidad + productoParaGuardar.cantidad;\n        console.log('🧩 Producto existente:', productoExistente);\n        const { error: updateError } = await supabase\n          .from('productos')\n          .update({ cantidad: nuevaCantidad })\n          .eq('id', productoExistente.id);\n\n        if (updateError) {\n          console.error('❌ Error al actualizar cantidad:', updateError.message);\n          alert('❌ Error al actualizar el producto');\n          return;\n        }\n\n\n        alert('✅ Producto actualizado correctamente');\n      } else {\n        const { error: insertError } = await supabase\n          .from('productos')\n          .insert([productoParaGuardar]);\n\n        if (insertError) {\n          console.error('❌ Error al insertar:', insertError.message);\n          alert('❌ Error al guardar el producto');\n          return;\n        }\n\n        alert('✅ Producto insertado correctamente');\n      }\n    }\n\n    if (onProductAdded) onProductAdded();\n\n    setProduct({\n      name: '',\n      barcode: '',\n      quantity: 1,\n      category: '',\n      location: '',\n      expiryDate: ''\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name ?? ''}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Categoría</label>\n        <select\n          name=\"category\"\n          value={product.category ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        >\n          <option value=\"\">Seleccione una categoría</option>\n          {categorias.map((cat) => (\n            <option key={cat.id} value={cat.id}>{cat.nombre}</option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Ubicación</label>\n        <select\n          name=\"location\"\n          value={product.location ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        >\n          <option value=\"\">Seleccione una ubicación</option>\n          {ubicaciones.map((ubi) => (\n            <option key={ubi.id} value={ubi.id}>{ubi.nombre}</option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Fecha de Caducidad</label>\n        <input\n          type=\"date\"\n          name=\"expiryDate\"\n          value={product.expiryDate ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700\"\n      >\n        {Inventario ? 'Actualizar Producto' : 'Agregar Producto'}\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductForm;","import React, { useEffect, useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n\nconst AddProductInventoryForm = ({ onProductAdded, codigoInicial = '' }) => {\n  const [product, setProduct] = useState({\n    name: '',\n    barcode: codigoInicial,\n    quantity: 1\n  });\n\n  const [loadingCatalog, setLoadingCatalog] = useState(false);\n  const [productoEnCatalogo, setProductoEnCatalogo] = useState(false);\n\n  // Buscar el producto en catalogo_productos si hay un código escaneado\n  useEffect(() => {\n    const buscarEnCatalogo = async () => {\n      if (!codigoInicial || codigoInicial.trim() === '') {\n        setProductoEnCatalogo(false);\n        return;\n      }\n\n      setLoadingCatalog(true);\n      const { data, error } = await supabase\n        .from('catalogo_productos')\n        .select('nombre')\n        .eq('codigo_barras', codigoInicial)\n        .single();\n\n      if (error) {\n        console.log('🔍 Producto no encontrado en catálogo. Se puede añadir manualmente.');\n        setProductoEnCatalogo(false);\n        setProduct(prev => ({\n          ...prev,\n          barcode: codigoInicial,\n          name: ''\n        }));\n      } else {\n        setProductoEnCatalogo(true);\n        setProduct(prev => ({\n          ...prev,\n          barcode: codigoInicial,\n          name: data.nombre\n        }));\n      }\n\n      setLoadingCatalog(false);\n    };\n\n    buscarEnCatalogo();\n  }, [codigoInicial]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prev => ({\n      ...prev,\n      [name]: name === 'quantity' ? parseInt(value) : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      cantidad: product.quantity\n    };\n\n    // 1. Buscar si ya existe en lista_compra\n    const { data: existente, error: errorBuscar } = await supabase\n      .from('lista_compra')\n      .select('*')\n      .eq('nombre', productoParaGuardar.nombre)\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .single();\n\n    if (errorBuscar && errorBuscar.code !== 'PGRST116') {\n      // Código 116 = no se encontró nada, lo manejamos abajo\n      console.error('❌ Error al buscar producto existente:', errorBuscar.message);\n      alert('Error al comprobar duplicados');\n      return;\n    }\n\n    if (existente) {\n      // 2. Si existe → actualizar cantidad\n      const nuevaCantidad = existente.cantidad + productoParaGuardar.cantidad;\n\n      const { error: errorUpdate } = await supabase\n        .from('lista_compra')\n        .update({ cantidad: nuevaCantidad })\n        .eq('id', existente.id);\n\n      if (errorUpdate) {\n        console.error('❌ Error al actualizar cantidad:', errorUpdate.message);\n        alert('Error al actualizar el producto existente');\n        return;\n      }\n      \n    } else {\n      // 3. Si no existe → insertar nuevo producto en lista_compra\n      const { error: errorInsert } = await supabase\n        .from('lista_compra')\n        .insert([productoParaGuardar]);\n\n      if (errorInsert) {\n        console.error('❌ Error al insertar nuevo producto:', errorInsert.message);\n        alert('Error al añadir el producto');\n        return;\n      }\n    }\n\n    // 4. Añadir a catalogo_productos si no está y SI tiene código de barras.\n    if (!productoEnCatalogo && product.barcode && product.barcode.trim() !== '') {\n      const { error: errorCatalogo } = await supabase.from('catalogo_productos').insert([\n        {\n          nombre: product.name,\n          codigo_barras: product.barcode\n        }\n      ]);\n\n      if (errorCatalogo) {\n        console.error('⚠️ Error al guardar en catálogo:', errorCatalogo.message);\n        alert('⚠️ El producto se guardó en la lista, pero no en el catálogo.');\n      }\n    }\n\n    if (onProductAdded) onProductAdded();\n    setProduct({ name: '', barcode: '', quantity: 1 });\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {loadingCatalog && <p className=\"text-sm text-gray-500\">Buscando en el catálogo...</p>}\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n          placeholder=\"Nombre del producto\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n          placeholder=\"Ej: 8431234567890\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700\"\n      >\n        Agregar Producto\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductInventoryForm;\n","import React from 'react';\nimport { Inventario } from '../components/Inventario';\n\nconst ProductItem = ({ product, onEdit, onDelete, onAddToShoppingList, onTogglePlus, onToggleMinus }) => {\n  const calculateDaysLeft = () => {\n    if (!product.fecha_caducidad) return null;\n    const expiry = new Date(product.fecha_caducidad);\n    const today = new Date();\n    const diffTime = expiry - today;\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  const daysLeft = calculateDaysLeft();\n  let statusClass = '';\n  let statusText = '';\n\n  if (daysLeft !== null) {\n    if (daysLeft < 0) {\n      statusClass = 'bg-red-200 text-red-800';\n      statusText = 'Caducado';\n    } else if (daysLeft <= 3) {\n      statusClass = 'bg-yellow-200 text-yellow-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    } else if (daysLeft <= 7) {\n      statusClass = 'bg-blue-200 text-blue-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    }\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-4 mb-4\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <div className=\"mt-4 flex space-x-2\">\n            <p className=\"text-gray-600\">Cantidad: </p>\n            <button\n              onClick={() => onToggleMinus(product)}\n              className=\"text-sm bg-yellow-500 text-white py-1 px-1 rounded hover:bg-yellow-600\"\n            >\n              ➖\n            </button>\n            <p>{product.cantidad}</p>\n            <button\n              onClick={() => onTogglePlus(product)}\n              className=\"text-sm bg-yellow-500 text-white py-1 px-1 rounded hover:bg-yellow-600\"\n            >\n              ➕​\n            </button>\n          </div>\n          <p className=\"text-gray-600\">Categoría: {product.categorias?.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones?.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caduca: {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n        \n        {statusText && (\n          <span className={`px-2 py-1 text-xs font-semibold rounded-full ${statusClass}`}>\n            {statusText}\n          </span>\n        )}\n      </div>\n      \n      <div className=\"mt-4 justify-between flex space-x-2\">\n        <div className=\"mt-4 flex space-x-2\">\n          <button\n            onClick={() => onEdit(product)}\n            className=\"text-sm bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\"\n          >\n            Editar 📝\n          </button>\n          <button\n            onClick={() => onDelete(product)}\n            className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n          >\n            Eliminar ❌\n          </button>\n        </div>\n        <div className=\"mt-4 flex space-x-2 px-5\">\n          <button\n            onClick={() => onAddToShoppingList(product)}\n            className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n          >\n            🛒\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;","import React from 'react';\nimport { useListaCompra } from '../hook/useListaCompra';\n//import { supabase } from '../utils/supabaseClient';\n\nconst ShoppingListItem = ({product, onTogglePurchased, onTogglePlus, onToggleMinus}) => {\n  const { lista, loading } = useListaCompra();\n\n  if (loading) return <p>Cargando lista de la compra...</p>;\n  if (lista.length === 0) return <p>No hay productos en tu cesta.</p>;\n  return (\n       \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-green-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <div className=\"mt-4 flex space-x-2\">\n            <p className=\"text-gray-600\">Cantidad:</p>\n            \n            <button\n              onClick={() => onToggleMinus(product)}\n              className=\"text-sm bg-yellow-500 text-white py-1 px-1 rounded hover:bg-yellow-600\"\n            >\n              ➖\n            </button>\n            <p>{product.cantidad}</p>\n            <button\n              onClick={() => onTogglePlus(product)}\n              className=\"text-sm bg-yellow-500 text-white py-1 px-1 rounded hover:bg-yellow-600\"\n            >\n              ➕​\n            </button>\n            \n            \n          </div>\n        </div>\n      </div>\n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onTogglePurchased(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Comprado\n        </button>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingListItem;\n","// src/hook/useListaCompra.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useListaCompra = () => {\r\n  const [lista, setLista] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLista = async () => {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('lista_compra')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error al obtener lista de compra:', error.message);\r\n      } else {\r\n        setLista(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchLista();\r\n  }, []);\r\n\r\n  return { lista, loading };\r\n};\r\n","import React from 'react';\nimport { useCaducados } from '../hook/useCaducados';\n//import { supabase } from '../utils/supabaseClient';\n\nconst ExpiredProductItem = ({product, onDelete, onAddToShoppingList}) => {\n  const { caducados, loading} = useCaducados();\n\n\n\n  if (loading) return <p>Cargando productos caducados...</p>;\n  if (caducados.length === 0) return <p>No hay productos caducados.</p>;\n  //console.log('Renderizando producto:', product);\n  return (\n    \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-red-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          \n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caducó el:{' '}\n              {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n\n        <span className=\"px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\n          Caducado\n        </span>\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onAddToShoppingList(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Añadir a compras\n        </button>\n        <button\n          onClick={() => onDelete(product)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default ExpiredProductItem;\n\n","// src/hook/useCaducados.js\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useCaducados = () => {\r\n  const [caducados, setCaducados] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchCaducados = async () => {\r\n    // Solo continuar si no hemos cargado antes\r\n    if (caducados.length > 0) return;\r\n\r\n    setLoading(true);\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    // Consulta SOLO los productos caducados\r\n    const { data: dataCaducados, error: errorCaducados } = await supabase\r\n      .from('caducados')\r\n      .select('*');\r\n   \r\n    if (errorCaducados) {\r\n      console.error('Error al cargar productos caducados:', errorCaducados);\r\n      setCaducados([]);\r\n    } else {\r\n      setCaducados(dataCaducados);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCaducados();\r\n  }, []);\r\n\r\n  return { caducados, loading, fetchCaducados, setCaducados };\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const SettingsModal = ({ isOpen, onClose }) => {\r\n  const [newCategoria, setNewCategoria] = useState('');\r\n  const [newUbicacion, setNewUbicacion] = useState('');\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const { data: categoriasData } = await supabase.from('categorias').select('*');\r\n    const { data: ubicacionesData } = await supabase.from('ubicaciones').select('*');\r\n    setCategorias(categoriasData || []);\r\n    setUbicaciones(ubicacionesData || []);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    if (isOpen) {\r\n      fetchData();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleAddCategoria = async () => {\r\n    if (newCategoria.trim() === '') return;\r\n    await supabase.from('categorias').insert([{ nombre: newCategoria.trim() }]);\r\n    setNewCategoria('');\r\n    fetchData();\r\n  };\r\n\r\n  const handleAddUbicacion = async () => {\r\n    if (newUbicacion.trim() === '') return;\r\n    await supabase.from('ubicaciones').insert([{ nombre: newUbicacion.trim() }]);\r\n    setNewUbicacion('');\r\n    fetchData();\r\n  };\r\n\r\n  const deleteCategoria = async (id) => {\r\n    await supabase.from('categorias').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n  const deleteUbicacion = async (id) => {\r\n    await supabase.from('ubicaciones').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md max-h-[90vh] flex flex-col\">\r\n        {/* <button\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\r\n        >\r\n          ✕\r\n        </button>*/}\r\n        {/* Encabezado */}\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800\">Ajustes</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-red-600 text-xl font-bold\">\r\n            &times;\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Contenido desplazable */}\r\n        <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n          {/* Tu formulario de añadir categoría/ubicación y las listas existentes */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir categoría */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Categoría</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCategoria}\r\n                  onChange={(e) => setNewCategoria(e.target.value)}\r\n                  className=\"w-full border border-gray-300 rounded text-gray-700 px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddCategoria}\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                >\r\n                  Añadir Categoría\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de categorías */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Categorías existentes</h3>\r\n              <ul className=\"space-y-1 mb-4\">\r\n                {categorias.map((cat) => (\r\n                  <li key={cat.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{cat.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteCategoria(cat.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir ubicación */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Ubicación</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newUbicacion}\r\n                  onChange={(e) => setNewUbicacion(e.target.value)}\r\n                  className=\"w-full border border-gray-300 text-gray-700 rounded px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddUbicacion}\r\n                  className=\"mt-2 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                >\r\n                  Añadir Ubicación\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de ubicaciones */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Ubicaciones existentes</h3>\r\n              <ul className=\"space-y-1\">\r\n                {ubicaciones.map((ubi) => (\r\n                  <li key={ubi.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{ubi.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteUbicacion(ubi.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        \r\n        {/* Pie opcional */}\r\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\r\n          © SmartFridge\r\n        </div>\r\n      </div>\r\n    </div> \r\n        \r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nconst ProductSearchBar = ({ onResults }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [categoriaId, setCategoriaId] = useState('');\r\n  const [ubicacionId, setUbicacionId] = useState('');\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFilters = async () => {\r\n      const { data: cat } = await supabase.from('categorias').select('*');\r\n      const { data: ubi } = await supabase.from('ubicaciones').select('*');\r\n      setCategorias(cat);\r\n      setUbicaciones(ubi);\r\n    };\r\n    fetchFilters();\r\n  }, []);\r\n\r\n  const handleSearch = async () => {\r\n    let queryBase = supabase\r\n      .from('productos')\r\n      .select('*, categorias(nombre), ubicaciones(nombre)')\r\n      .or(`nombre.ilike.%${query}%,codigo_barras.ilike.%${query}%`);\r\n\r\n    if (categoriaId) queryBase = queryBase.eq('categoria_id', categoriaId);\r\n    if (ubicacionId) queryBase = queryBase.eq('ubicacion_id', ubicacionId);\r\n\r\n    const { data: productos, error } = await queryBase;\r\n\r\n    if (error) return alert('❌ Error buscando productos');\r\n\r\n    if (productos.length > 0) {\r\n      onResults(productos, null); // ✅ Añadimos el término de búsqueda\r\n    } else {\r\n        const { data: enCatalogo, error: errorCatalogo } = await supabase\r\n            .from('catalogo_productos')\r\n            .select('*')\r\n            .or(`nombre.ilike.%${query}%,codigo_barras.ilike.%${query}%`);\r\n        \r\n        if (errorCatalogo) {\r\n            alert('❌ Error al buscar en el catálogo');\r\n            return;\r\n        }\r\n        \r\n        onResults([], enCatalogo); // ← ✅ Pasar todos\r\n        \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row gap-2 mb-4\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar por nombre o código de barras\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        className=\"border px-3 py-2 rounded w-full\"\r\n      />\r\n      <select\r\n        value={categoriaId}\r\n        onChange={(e) => setCategoriaId(e.target.value)}\r\n        className=\"border px-3 py-2 rounded\"\r\n      >\r\n        <option value=\"\">Todas las categorías</option>\r\n        {categorias.map(c => <option key={c.id} value={c.id}>{c.nombre}</option>)}\r\n      </select>\r\n      <select\r\n        value={ubicacionId}\r\n        onChange={(e) => setUbicacionId(e.target.value)}\r\n        className=\"border px-3 py-2 rounded\"\r\n      >\r\n        <option value=\"\">Todas las ubicaciones</option>\r\n        {ubicaciones.map(u => <option key={u.id} value={u.id}>{u.nombre}</option>)}\r\n      </select>\r\n      <button onClick={handleSearch} className=\"text-sm bg-blue-500 text-white py-2 px-3 rounded hover:bg-blue-600\">\r\n        Buscar <span role=\"img\">🔍</span> \r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSearchBar;\r\n","import React, { useState, useEffect } from 'react';\nimport ScanBarcodeButton from './components/ScanBarcodeButton';\nimport AddProductForm from './components/AddProductForm';\nimport AddProductInventoryForm from './components/AddProductInventoryForm';\nimport ProductItem from './components/ProductItem';\nimport ShoppingListItem from './components/ShoppingListItem';\nimport ExpiredProductItem from './components/ExpiredProductItem';\nimport { SettingsModal } from './components/SettingsModal';\nimport { supabase } from './utils/supabaseClient';\nimport ProductSearchBar from './components/ProductSearchBar';\n\n\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [shoppingList, setShoppingList] = useState([]);\n  const [expiredProducts, setExpiredProducts] = useState([]);\n  const [activeTab, setActiveTab] = useState('inventory');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [showAddInventoryForm, setShowAddInventoryForm] = useState(false);\n  const [editingProductShopping, setEditingProductShopping] = useState(null);\n  const [codigoEscaneado, setCodigoEscaneado] = useState('');\n\n\n  \n  const fetchProducts = async () => {\n    const { data, error } = await supabase.from('productos').select(\"id, nombre, codigo_barras, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n    if (!error) {\n      setProducts(data);\n    }\n  };\n\n  const fetchExpiredProducts = async () => {\n    const { data, error } = await supabase\n      .from('caducados')\n      .select(\"id, nombre, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n\n    if (!error) {\n      setExpiredProducts(data);\n    }\n  };\n\n  const fetchShoppingList = async () => {\n    const { data, error } = await supabase\n      .from('lista_compra')\n      .select(\"*\");\n\n    if (!error) {\n      setShoppingList(data);\n    }\n  };\n\n  if (activeTab === 'shopping'){\n    fetchShoppingList();\n  }\n  if (activeTab === 'inventory'){\n    fetchProducts();\n  }\n  if (activeTab === 'expired'){\n    fetchExpiredProducts();\n  }\n\n  useEffect(() => {\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n    revisarProductosCaducados();\n  }, []);\n\n  // Efecto para manejar productos caducados\n  \n  const revisarProductosCaducados = async () => {\n    const now = new Date();\n\n    const { data: productos, error } = await supabase\n      .from('productos')\n      .select('*');\n\n    if (error) {\n      console.error('Error al obtener productos:', error.message);\n      return;\n    }\n\n    const caducados = productos.filter(p => new Date(p.fecha_caducidad) < now);\n    //const vigentes = productos.filter(p => new Date(p.fecha_caducidad) >= now);\n\n    // Eliminar los caducados del inventario\n    for (const producto of caducados) {\n      await supabase.from('productos').delete().eq('id', producto.id);\n    }\n\n    // Agregarlos a 'lista_compra' y 'caducados'\n    const nuevoId = Date.now().toString();\n    \n\n    for (const producto of caducados) {\n      // Obtener nombre de categoría\n      const { data: categoriaData } = await supabase\n        .from('categorias')\n        .select('nombre')\n        .eq('id', producto.categoria_id)\n        .single();\n\n      //const categoriaNombre = categoriaData?.nombre || '';\n\n      // Obtener nombre de ubicación\n      const { data: ubicacionData } = await supabase\n        .from('ubicaciones')\n        .select('nombre')\n        .eq('id', producto.ubicacion_id)\n        .single();\n\n      //const ubicacionNombre = ubicacionData?.nombre || '';\n\n      const { data: existe, error: errorExiste } = await supabase\n        .from('lista_compra')\n        .select('id')\n        .eq('codigo_barras', producto.codigo_barras)\n        .eq('es_caducado', true)\n        .maybeSingle();\n\n      if (!existe) {\n        \n        await supabase.from('lista_compra').insert([{\n          id: nuevoId,\n          ...producto,\n          es_caducado: true,\n        }]);\n      }\n\n\n      // Insertar en caducados\n      const yaExiste = await supabase\n        .from('caducados')\n        .select('id')\n        .eq('nombre', producto.nombre)\n        .eq('codigo_barras', producto.codigo_barras)\n        .eq('fecha_caducidad', producto.fecha_caducidad);\n\n      if (yaExiste.data.length === 0) {\n        await supabase.from('caducados').insert({\n          nombre: producto.nombre,\n          cantidad: producto.cantidad,\n          codigo_barras: producto.codigo_barras,\n          fecha_caducidad: producto.fecha_caducidad,\n          categoria_id: producto.categoria_id,\n          ubicacion_id: producto.ubicacion_id\n      });\n      }\n    }\n\n    // Recarga de estado tras limpieza\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n  };\n\n\n  const handleScan = (barcode) => {\n    setShowAddForm(true);\n    setEditingProduct({\n      name: '',\n      barcode,\n      quantity: 1,\n      category: 'otros',\n      location: 'despensa-estante1',\n      expiryDate: ''\n    });\n  };\n\n  const handleAddProduct = (newProduct) => {\n    if (editingProduct && editingProduct.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProduct.id ? { ...newProduct, id: editingProduct.id } : p\n      ));\n    } else {\n      // Añadir nuevo producto\n      setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchProducts();\n    setShowAddForm(false);\n    setEditingProduct(null);\n    revisarProductosCaducados();\n  };\n\n  const handleScanShopping = (codigo) => {\n    setCodigoEscaneado(codigo);\n    setShowAddInventoryForm(true);\n  };\n  \n  const handleAddInventoryProduct = (newProduct) => {\n    if (editingProductShopping && editingProductShopping.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProductShopping.id ? { ...newProduct, id: editingProductShopping.id } : p\n      ));\n    } else {\n    // Añadir nuevo producto a la lista de la compra.\n    setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchShoppingList();\n    setEditingProductShopping(null);\n    setShowAddInventoryForm(false);\n  };\n\n  const handleEditProduct = (producto) => {\n    console.log('📝 Editando producto:', producto);\n    setEditingProduct({\n      id: producto.id,               // 👈\n      name: producto.nombre,\n      barcode: producto.codigo_barras,\n      quantity: producto.cantidad,\n      expiryDate: producto.fecha_caducidad,\n      category: producto.categoria_id,\n      location: producto.ubicacion_id\n    });\n    setShowAddForm(true);\n    // 👇 Scroll al principio de la página\n    setTimeout(() => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }, 100); // esperar a que se muestre el formulario\n  };\n\n\n  const handleDeleteProduct = async (productId) => {\n    const { error } = await supabase\n    .from('productos')\n    .delete()\n    .eq('id', productId);\n\n    if (error) {\n      console.error('❌ Error al eliminar producto:', error.message);\n      alert('❌ No se pudo eliminar el producto');\n    } else {\n      // Eliminarlo del estado para actualizar la vista\n      setProducts((prevProducts) => prevProducts.filter(p => p.id !== productId));\n    }\n    fetchProducts();\n  };\n  \n\n  const handleDeleteExpiredProduct = async (product) => {\n    const { error } = await supabase\n      .from('caducados')\n      .delete()\n      .eq('id', product.id);\n\n    if (!error) {\n      setExpiredProducts(prev => prev.filter(p => p.id !== product.id));\n    }\n    fetchExpiredProducts();\n  };\n\n  const handleAddToShoppingList = async (product) => {\n    const yaExiste = await supabase\n      .from('caducados')\n      .select('id')\n      .eq('nombre', product.nombre)\n      .eq('codigo_barras', product.codigo_barras)\n      .eq('fecha_caducidad', product.fecha_caducidad);\n\n    if (yaExiste.data.length === 0) {\n      await supabase.from('lista_compra').insert({\n        nombre: product.nombre,\n        cantidad: product.cantidad,\n        codigo_barras: product.codigo_barras,\n        fecha_caducidad: product.fecha_caducidad,\n        categoria_id: product.categoria_id,\n        ubicacion_id: product.ubicacion_id,\n        creado: product.created_at,\n        //es_caducado: true\n      });\n    }\n  };\n\n  const handleAddManualItem = () => {\n    setShowAddInventoryForm(true);\n  };\n\n\n  const handleTogglePurchased = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .delete()\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n  //Añadir y Eliminar cantidades para la lista de la compra.\n  const handleAddQuantity = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .update({ cantidad: product.cantidad + 1})\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n  const handleSubstractQuantity = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .update({ cantidad: product.cantidad - 1})\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    if (product.cantidad === 1){\n      const { error } = await supabase\n      .from('lista_compra')\n      .delete()\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    }\n    fetchShoppingList();\n  };\n\n  //Añadir y eliminar cantidades para el inventario.\n  const handleAddQuantityInventario = async (product) => {\n    const nuevaCantidad = product.cantidad + 1;\n    const { error } = await supabase\n      .from('productos')\n      .update({ cantidad: nuevaCantidad})\n      .eq('id', product.id);\n    if (!error) {\n      //alert('❌ No se pudo añadir la cantidad');\n      setProducts(products.map(p =>\n        p.id === product.id ? { ...p, cantidad: nuevaCantidad } : p\n      ));\n\n      if (searchResults.length > 0) {\n        const nuevosResultados = searchResults.map(p =>\n          p.id === product.id ? { ...p, cantidad: nuevaCantidad } : p\n        );\n        setSearchResults(nuevosResultados);\n      }\n    }\n    fetchProducts();\n  };\n\n  const handleSubstractQuantityInventario = async (product) => {\n    const nuevaCantidad = product.cantidad - 1;\n    const { error } = await supabase\n      .from('productos')\n      .update({ cantidad: nuevaCantidad})\n      .eq('id', product.id);\n      if (!error) {\n        \n        //alert('❌ No se pudo restar la cantidad');\n        setProducts(products.map(p =>\n          p.id === product.id ? { ...p, cantidad: nuevaCantidad } : p\n        ));\n\n        if (searchResults.length > 0) {\n          const nuevosResultados = searchResults.map(p =>\n            p.id === product.id ? { ...p, cantidad: nuevaCantidad } : p\n          );\n          setSearchResults(nuevosResultados);\n        }\n      }\n      if (product.cantidad === 1){\n        const { error } = await supabase\n        .from('productos')\n        .delete()\n        .eq('id', product.id);\n      if (!error) {\n        //alert('❌ No se pudo eliminar la cantidad');\n        setProducts(products.filter(i => i.id !== product.id));\n      }\n    }\n    fetchProducts();\n  };\n\n  const [mostrarAjustes, setMostrarAjustes] = useState(false);\n  \n  //Barra de búsqueda\n  const [searchResults, setSearchResults] = useState([]);\n  const [catalogMatch, setCatalogMatch] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleAddCatalogProductToShoppingList = async () => {\n    if (!catalogMatch) return;\n\n    const { error } = await supabase.from('lista_compra').insert({\n      nombre: catalogMatch.nombre,\n      cantidad: 1,\n      codigo_barras: catalogMatch.codigo_barras,\n      categoria_id: catalogMatch.categoria_id,\n      ubicacion_id: catalogMatch.ubicacion_id,\n      es_caducado: false\n    });\n\n    if (error) {\n      console.error('❌ Error al añadir desde catálogo:', error.message);\n      alert('❌ No se pudo añadir el producto desde el catálogo.');\n    } else {\n      alert(`✅ Añadido \"${catalogMatch.nombre}\" a la lista de la compra`);\n      fetchShoppingList(); // refrescar la lista\n      setCatalogMatch(null); // limpia la sugerencia\n      setSearchResults([]);  // limpia los resultados\n    }\n  };\n\n\n\n\n\n\n  return (\n    <div className=\"min-h-screen bg-gray-800 p-4\">\n      <div className=\"max-w-6xl mx-auto bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"p-4 bg-blue-600 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">SmartFridge</h1>\n            <button\n              onClick={() => setMostrarAjustes(true)}\n              className=\"bg-gray-700 text-white px-3 py-2 rounded hover:bg-gray-700\"\n            >\n              ⚙️ Ajustes\n            </button>\n          </div>\n          \n          <p className=\"text-blue-100\">Control total de tu cocina</p>\n          \n          \n\n          {mostrarAjustes && <SettingsModal onClose={() => setMostrarAjustes(false)} />}\n          \n        </div>\n        \n        <div className=\"flex border-b\">\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'inventory' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('inventory')}\n          >\n            Inventario 📋​\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'shopping' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('shopping')}\n          >\n            Lista de la compra 🛒\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'expired' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('expired')}\n          >\n            Caducados ({expiredProducts.length}) ☣️​\n          </button>\n        </div>\n        \n        <div className=\"p-4\">\n          {activeTab === 'inventory' ? (\n            <>\n              <div>\n                <ProductSearchBar onResults={(resultados, catalogoArray, termino) => {\n                  setSearchResults(resultados);\n                  setCatalogMatch(Array.isArray(catalogoArray) ? catalogoArray : []);\n                  setSearchTerm(termino); //guarda el término para futuras refiltraciones\n                }} />\n              </div>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={handleScan} />\n                <button\n                  onClick={() => {\n                    setShowAddForm(true);\n                    setEditingProduct(null);\n                    fetchProducts();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Manualmente\n                </button>\n              </div>\n              \n              {showAddForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductForm onProductAdded={handleAddProduct} \n                    Inventario={editingProduct} \n                  />\n\n                  <button\n                    onClick={() => {\n                      setShowAddForm(false);\n                      setEditingProduct(null);\n                      fetchProducts();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              \n              <div className=\"space-y-4\">\n                {searchResults.length === 0 && Array.isArray(catalogMatch) && catalogMatch.length > 0 && (\n                  <div>\n                    <p className=\"text-yellow-600 font-semibold mt-2\">\n                      Los siguientes productos están agotados:\n                    </p>\n                    {/*<div className=\"mt-4 flex space-x-2\">\n                      <p className=\"text-yellow-600 font-semibold mt-2\">\n                        ¿Añadir \"{catalogMatch.nombre}\" a la lista de la compra?</p>\n                      \n                      <button\n                        onClick = {handleAddCatalogProductToShoppingList} className=\"text-sm bg-blue-400 text-white py-1 px-3 rounded hover:bg-blue-600\"\n                      >\n                      🛒\n                      </button>\n                    </div>*/}\n                    <ul className=\"mt-2 space-y-2\">\n                      {catalogMatch.map((prod) => (\n                        <li key={prod.id} className=\"flex items-center justify-between bg-yellow-100 p-2 rounded\">\n                          <span>{prod.nombre}</span>\n                          <button\n                            onClick={async () => {\n                              const { error } = await supabase.from('lista_compra').insert({\n                                nombre: prod.nombre,\n                                cantidad: 1,\n                                codigo_barras: prod.codigo_barras,\n                                categoria_id: prod.categoria_id,\n                                ubicacion_id: prod.ubicacion_id,\n                                es_caducado: false\n                              });\n\n                              if (!error) {\n                                alert(`✅ Añadido \"${prod.nombre}\" a la lista de la compra`);\n                                fetchShoppingList();\n                              } else {\n                                alert('❌ Error al añadir a la lista de la compra');\n                              }\n                            }}\n                            className=\"text-sm bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\"\n                          >\n                            Añadir 🛒\n                          </button>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                {(searchResults.length > 0 ? searchResults : products).length === 0 ? (\n                  <p className=\"text-gray-500\">No hay productos en tu inventario. ¡Añade algunos!</p>\n                ) : (\n                  (searchResults.length > 0 ? searchResults : products).map(product => (\n                    <ProductItem\n                      key={product.id}\n                      product={product}\n                      onEdit={handleEditProduct}\n                      onDelete={handleDeleteProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                      onTogglePlus={handleAddQuantityInventario}\n                      onToggleMinus={handleSubstractQuantityInventario}\n                    />\n                  ))\n                )}\n\n                \n              </div>\n            </>\n          ) : activeTab === 'shopping' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={(code) => {\n                  setCodigoEscaneado(code);\n                  setShowAddInventoryForm(true);\n                }} />\n                <button\n                  onClick={() => {\n                    setShowAddInventoryForm(true);\n                    setCodigoEscaneado('');\n                    setEditingProductShopping(null);\n                    fetchShoppingList();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Producto\n                </button>\n              </div>\n              {showAddInventoryForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductInventoryForm\n                    codigoInicial={codigoEscaneado}\n                    onProductAdded={() => {\n                      setShowAddInventoryForm(false);\n                      setCodigoEscaneado('');\n                      fetchShoppingList(); // si quieres refrescar después de añadir\n                    }}\n                  />\n                  <button\n                    onClick={() => {\n                      setShowAddInventoryForm(false);\n                      fetchShoppingList();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              <div className=\"space-y-4\">\n                \n                {shoppingList.length === 0 ? (\n                  <p className=\"text-gray-500\">Tu lista de la compra está vacía. ¡Añade algunos productos!</p>\n                ) : (\n                  shoppingList.map(product => (\n                    <ShoppingListItem\n                      key={product.id}\n                      product={product}\n                      onTogglePurchased={handleTogglePurchased}\n                      onTogglePlus={handleAddQuantity}\n                      onToggleMinus={handleSubstractQuantity}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              <h2 className=\"text-xl font-semibold mb-4\">Productos Caducados</h2>\n              \n              <div className=\"space-y-4\">\n                {expiredProducts.length === 0 ? (\n                  <p className=\"text-gray-500\">¡Genial! No tienes productos caducados.</p>\n                ) : (\n                  \n                  expiredProducts.map(product => (\n                    <ExpiredProductItem\n                      key={product.id}\n                      product={product}\n                      onDelete={handleDeleteExpiredProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          )}\n        </div>\n        {/* Pie opcional */}\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\n          © SmartFridge\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  //<StrictMode>\n  <App />\n  //</StrictMode>\n);"],"sourceRoot":""}