{"version":3,"sources":["components/ScanBarcodeButton.js","utils/supabaseClient.js","hook/useSupabaseData.js","components/AddProductForm.js","components/AddProductInventoryForm.js","components/ProductItem.js","components/ShoppingListItem.js","hook/useListaCompra.js","components/ExpiredProductItem.js","hook/useCaducados.js","components/SettingsModal.js","App.js","index.js"],"names":["ScanBarcodeButton","_ref","onScan","isScanning","setIsScanning","useState","status","setStatus","videoRef","useRef","handleDetected","result","code","codeResult","concat","stopScanner","Quagga","offDetected","stop","useEffect","React","createElement","className","onClick","startScanner","setTimeout","init","inputStream","type","target","current","document","querySelector","constraints","width","height","facingMode","decoder","readers","err","console","error","start","onDetected","ref","id","supabase","createClient","useSupabaseData","table","data","setData","loading","setLoading","async","from","select","fetchData","AddProductForm","_product$name","_product$barcode","_product$quantity","_product$category","_product$location","_product$expiryDate","onProductAdded","Inventario","product","setProduct","name","barcode","quantity","category","location","expiryDate","categorias","ubicaciones","eq","limit","message","length","existente","prev","_objectSpread","nombre","categoria_id","ubicacion_id","fecha_caducidad","buscarProductoPorCodigo","handleChange","e","value","qty","parseInt","[object Object]","onSubmit","preventDefault","productoParaGuardar","codigo_barras","cantidad","productoCatalogo","errorCatalogo","errorInsertarCatalogo","insert","alert","updateError","update","existentes","fetchError","productoExistente","nuevaCantidad","log","insertError","onChange","required","min","map","cat","key","ubi","AddProductInventoryForm","codigoInicial","loadingCatalog","setLoadingCatalog","productoEnCatalogo","setProductoEnCatalogo","single","buscarEnCatalogo","errorBuscar","errorUpdate","errorInsert","placeholder","ProductItem","_product$categorias","_product$ubicaciones","onEdit","onDelete","onAddToShoppingList","daysLeft","calculateDaysLeft","diffTime","Date","Math","ceil","statusClass","statusText","toLocaleDateString","ShoppingListItem","onTogglePurchased","onTogglePlus","onToggleMinus","lista","useListaCompra","setLista","order","ascending","fetchLista","ExpiredProductItem","caducados","useCaducados","setCaducados","fetchCaducados","toISOString","split","dataCaducados","errorCaducados","SettingsModal","isOpen","onClose","newCategoria","setNewCategoria","newUbicacion","setNewUbicacion","setCategorias","setUbicaciones","categoriasData","ubicacionesData","trim","delete","deleteCategoria","deleteUbicacion","App","products","setProducts","shoppingList","setShoppingList","expiredProducts","setExpiredProducts","activeTab","setActiveTab","showAddForm","setShowAddForm","editingProduct","setEditingProduct","showAddInventoryForm","setShowAddInventoryForm","editingProductShopping","setEditingProductShopping","codigoEscaneado","setCodigoEscaneado","fetchProducts","fetchExpiredProducts","fetchShoppingList","revisarProductosCaducados","now","productos","filter","p","producto","nuevoId","toString","categoriaData","ubicacionData","existe","errorExiste","maybeSingle","es_caducado","handleEditProduct","handleDeleteProduct","productId","prevProducts","handleDeleteExpiredProduct","handleAddToShoppingList","creado","created_at","handleTogglePurchased","i","handleAddQuantity","handleSubstractQuantity","mostrarAjustes","setMostrarAjustes","Fragment","newProduct","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.ce00d935.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Quagga from 'quagga';\n\n  const ScanBarcodeButton = ({ onScan }) => {\n    const [isScanning, setIsScanning] = useState(false);\n    const [status, setStatus] = useState('');\n    const videoRef = useRef(null);\n\n    const startScanner = () => {\n    setIsScanning(true);\n    setStatus('Iniciando escáner...');\n\n    setTimeout(() => {\n      Quagga.init({\n        inputStream: {\n          type: 'LiveStream',\n          target: videoRef.current || document.querySelector('#video'),\n          constraints: {\n            width: 640,\n            height: 480,\n            facingMode: 'environment'\n          }\n        },\n        decoder: {\n          readers: ['ean_reader', 'code_128_reader', 'upc_reader']\n        }\n      }, (err) => {\n        if (err) {\n          console.error(err);\n          setStatus('Error al iniciar el escáner');\n          return;\n        }\n        Quagga.start();\n        setStatus('Escaneando...');\n      });\n\n      Quagga.onDetected(handleDetected);\n    }, 500); // Esperamos medio segundo para asegurar que el DOM esté listo\n  };\n\n  const handleDetected = (result) => {\n    const code = result.codeResult.code;\n    setStatus(`Código detectado: ${code}`);\n    onScan(code);\n    stopScanner();\n  };\n\n  const stopScanner = () => {\n    Quagga.offDetected(handleDetected);\n    Quagga.stop();\n    setIsScanning(false);\n    setStatus('');\n  };\n\n  useEffect(() => {\n    return () => {\n      if (isScanning) stopScanner();\n    };\n  }, [isScanning]);\n\n  return (\n    <div className=\"relative\">\n      <button \n        onClick={isScanning ? stopScanner : startScanner}\n        className={`py-2 px-4 rounded-lg transition-colors ${\n          isScanning \n            ? 'bg-red-500 hover:bg-red-600 text-white'\n            : 'bg-blue-500 hover:bg-blue-600 text-white'\n        }`}\n      >\n        {isScanning ? 'Cancelar Escaneo' : 'Escanear Código'}\n      </button>\n\n      <div className=\"text-sm text-gray-600 mt-1\">{status}</div>\n\n      {isScanning && (\n        <div className=\"fixed inset-0 bg-black z-50 flex flex-col items-center justify-center p-4\">\n          <div className=\"w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"text-lg font-bold text-white\">Escáner de Códigos</h2>\n              <button \n                onClick={stopScanner}\n                className=\"text-white text-xl p-2\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div\n              ref={videoRef}\n              className=\"relative w-full h-64 bg-black rounded-lg overflow-hidden\"\n              id=\"video\"\n            />\n\n            <div className=\"mt-4 text-center text-white\">\n              <p>Enfoca el código de barras dentro del cuadro</p>\n              <p className=\"text-yellow-300 font-medium mt-2\">{status}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScanBarcodeButton;","import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://qhfungoeldemkcnpqaiu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFoZnVuZ29lbGRlbWtjbnBxYWl1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg0OTIxNDEsImV4cCI6MjA2NDA2ODE0MX0.Cyy4kZm1rGvgez19hZWY1qQ7JwxcF__doLMqYl6Qa9E';\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n","// src/hooks/useSupabaseData.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useSupabaseData = (table) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data, error } = await supabase.from(table).select('*');\r\n      if (error) console.error(error);\r\n      else setData(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [table]);\r\n\r\n  return { data, loading };\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { useSupabaseData } from '../hook/useSupabaseData';\n\nconst AddProductForm = ({ onProductAdded, Inventario = null }) => {\n  const [product, setProduct] = useState(Inventario || {\n    id: '',\n    name: '',\n    barcode: '',\n    quantity: 1,\n    category: '',\n    location: '',\n    expiryDate: ''\n  });\n\n  const { data: categorias } = useSupabaseData('categorias');\n  const { data: ubicaciones } = useSupabaseData('ubicaciones');\n\n  useEffect(() => {\n    const buscarProductoPorCodigo = async () => {\n      if (!product.barcode) return;\n\n      const { data, error } = await supabase\n        .from('catalogo_productos')\n        .select('*')\n        .eq('codigo_barras', product.barcode)\n        .limit(1);\n\n      if (error) {\n        console.error('Error buscando por código de barras:', error.message);\n        return;\n      }\n\n      if (data.length > 0) {\n        const existente = data[0];\n        setProduct(prev => ({\n          ...prev,\n          name: existente.nombre,\n          category: existente.categoria_id,\n          location: existente.ubicacion_id,\n          expiryDate: existente.fecha_caducidad\n        }));\n      }\n    };\n\n    buscarProductoPorCodigo();\n  }, [product.barcode]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'quantity') {\n      const qty = value === '' ? '' : parseInt(value, 10);\n      setProduct(prev => ({ ...prev, quantity: qty }));\n    } else {\n      setProduct(prev => ({ ...prev, [name]: value }));\n    }\n\n    {/*setProduct(prev => ({\n      ...prev,\n      [name]: name === 'quantity' ? parseInt(value) : value\n    }));*/}\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      fecha_caducidad: product.expiryDate,\n      categoria_id: product.category,\n      ubicacion_id: product.location,\n      cantidad: product.quantity\n    };\n\n    // Insertar en catálogo si no existe\n    const { data: productoCatalogo, error: errorCatalogo } = await supabase\n      .from('catalogo_productos')\n      .select('*')\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .limit(1);\n\n    if (errorCatalogo) {\n      console.error('❌ Error consultando catálogo:', errorCatalogo.message);\n    }\n\n    if (!productoCatalogo || productoCatalogo.length === 0) {\n      const { error: errorInsertarCatalogo } = await supabase\n        .from('catalogo_productos')\n        .insert([{\n          nombre: productoParaGuardar.nombre,\n          codigo_barras: productoParaGuardar.codigo_barras,\n        }]);\n\n      if (errorInsertarCatalogo) {\n        console.error('❌ Error al insertar en catálogo:', errorInsertarCatalogo.message);\n        alert('❌ No se pudo guardar el producto en el catálogo');\n        return;\n      }\n    }\n\n    if (Inventario && Inventario.id) {\n      // Modo edición → actualizar cantidad directamente\n      const { error: updateError } = await supabase\n        .from('productos')\n        .update({\n          nombre: productoParaGuardar.nombre,\n          codigo_barras: productoParaGuardar.codigo_barras,\n          fecha_caducidad: productoParaGuardar.fecha_caducidad,\n          categoria_id: productoParaGuardar.categoria_id,\n          ubicacion_id: productoParaGuardar.ubicacion_id,\n          cantidad: productoParaGuardar.cantidad\n        })\n        .eq('id', Inventario.id);\n\n      if (updateError) {\n        console.error('❌ Error al actualizar producto:', updateError.message);\n        alert('❌ Error al actualizar el producto');\n        return;\n      }\n\n      alert('✅ Producto actualizado correctamente');\n    } else {\n      // Modo nuevo → comprobar si ya existe\n      const { data: existentes, error: fetchError } = await supabase\n        .from('productos')\n        .select('id, cantidad')\n        .eq('codigo_barras', productoParaGuardar.codigo_barras)\n        .eq('nombre', productoParaGuardar.nombre)\n\n      if (fetchError) {\n        console.error('❌ Error al buscar producto existente:', fetchError.message);\n        alert('❌ Error buscando productos existentes');\n        return;\n      }\n\n      if (existentes.length > 0) {\n        const productoExistente = existentes[0];\n        const nuevaCantidad = productoExistente.cantidad + productoParaGuardar.cantidad;\n        console.log('🧩 Producto existente:', productoExistente);\n        const { error: updateError } = await supabase\n          .from('productos')\n          .update({ cantidad: nuevaCantidad })\n          .eq('id', productoExistente.id);\n\n        if (updateError) {\n          console.error('❌ Error al actualizar cantidad:', updateError.message);\n          alert('❌ Error al actualizar el producto');\n          return;\n        }\n\n\n        alert('✅ Producto actualizado correctamente');\n      } else {\n        const { error: insertError } = await supabase\n          .from('productos')\n          .insert([productoParaGuardar]);\n\n        if (insertError) {\n          console.error('❌ Error al insertar:', insertError.message);\n          alert('❌ Error al guardar el producto');\n          return;\n        }\n\n        alert('✅ Producto insertado correctamente');\n      }\n    }\n\n    if (onProductAdded) onProductAdded();\n\n    setProduct({\n      name: '',\n      barcode: '',\n      quantity: 1,\n      category: '',\n      location: '',\n      expiryDate: ''\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name ?? ''}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Categoría</label>\n        <select\n          name=\"category\"\n          value={product.category ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        >\n          <option value=\"\">Seleccione una categoría</option>\n          {categorias.map((cat) => (\n            <option key={cat.id} value={cat.id}>{cat.nombre}</option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Ubicación</label>\n        <select\n          name=\"location\"\n          value={product.location ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        >\n          <option value=\"\">Seleccione una ubicación</option>\n          {ubicaciones.map((ubi) => (\n            <option key={ubi.id} value={ubi.id}>{ubi.nombre}</option>\n          ))}\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Fecha de Caducidad</label>\n        <input\n          type=\"date\"\n          name=\"expiryDate\"\n          value={product.expiryDate ?? ''}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700\"\n      >\n        {Inventario ? 'Actualizar Producto' : 'Agregar Producto'}\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductForm;","import React, { useEffect, useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n\nconst AddProductInventoryForm = ({ onProductAdded, codigoInicial = '' }) => {\n  const [product, setProduct] = useState({\n    name: '',\n    barcode: codigoInicial,\n    quantity: 1\n  });\n\n  const [loadingCatalog, setLoadingCatalog] = useState(false);\n  const [productoEnCatalogo, setProductoEnCatalogo] = useState(false);\n\n  // Buscar el producto en catalogo_productos si hay un código escaneado\n  useEffect(() => {\n    const buscarEnCatalogo = async () => {\n      if (!codigoInicial) return;\n\n      setLoadingCatalog(true);\n      const { data, error } = await supabase\n        .from('catalogo_productos')\n        .select('nombre')\n        .eq('codigo_barras', codigoInicial)\n        .single();\n\n      if (error) {\n        console.log('🔍 Producto no encontrado en catálogo. Se puede añadir manualmente.');\n        setProductoEnCatalogo(false);\n        setProduct(prev => ({\n          ...prev,\n          barcode: codigoInicial,\n          name: ''\n        }));\n      } else {\n        console.log('✅ Producto encontrado en catálogo:', data.nombre);\n        setProductoEnCatalogo(true);\n        setProduct(prev => ({\n          ...prev,\n          barcode: codigoInicial,\n          name: data.nombre\n        }));\n      }\n\n      setLoadingCatalog(false);\n    };\n\n    buscarEnCatalogo();\n  }, [codigoInicial]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prev => ({\n      ...prev,\n      [name]: name === 'quantity' ? parseInt(value) : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      cantidad: product.quantity\n    };\n\n    // 1. Buscar si ya existe en lista_compra\n    const { data: existente, error: errorBuscar } = await supabase\n      .from('lista_compra')\n      .select('*')\n      .eq('nombre', productoParaGuardar.nombre)\n      .eq('codigo_barras', productoParaGuardar.codigo_barras)\n      .single();\n\n    if (errorBuscar && errorBuscar.code !== 'PGRST116') {\n      // Código 116 = no se encontró nada, lo manejamos abajo\n      console.error('❌ Error al buscar producto existente:', errorBuscar.message);\n      alert('Error al comprobar duplicados');\n      return;\n    }\n\n    if (existente) {\n      // 2. Si existe → actualizar cantidad\n      const nuevaCantidad = existente.cantidad + productoParaGuardar.cantidad;\n\n      const { error: errorUpdate } = await supabase\n        .from('lista_compra')\n        .update({ cantidad: nuevaCantidad })\n        .eq('id', existente.id);\n\n      if (errorUpdate) {\n        console.error('❌ Error al actualizar cantidad:', errorUpdate.message);\n        alert('Error al actualizar el producto existente');\n        return;\n      }\n      \n    } else {\n      // 3. Si no existe → insertar nuevo producto en lista_compra\n      const { error: errorInsert } = await supabase\n        .from('lista_compra')\n        .insert([productoParaGuardar]);\n\n      if (errorInsert) {\n        console.error('❌ Error al insertar nuevo producto:', errorInsert.message);\n        alert('Error al añadir el producto');\n        return;\n      }\n    }\n\n    // 4. Añadir a catalogo_productos si no está\n    if (!productoEnCatalogo) {\n      const { error: errorCatalogo } = await supabase.from('catalogo_productos').insert([\n        {\n          nombre: product.name,\n          codigo_barras: product.barcode\n        }\n      ]);\n\n      if (errorCatalogo) {\n        console.error('⚠️ Error al guardar en catálogo:', errorCatalogo.message);\n        alert('⚠️ El producto se guardó en la lista, pero no en el catálogo.');\n      }\n    }\n\n    if (onProductAdded) onProductAdded();\n    setProduct({ name: '', barcode: '', quantity: 1 });\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {loadingCatalog && <p className=\"text-sm text-gray-500\">Buscando en el catálogo...</p>}\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n          placeholder=\"Nombre del producto\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n          placeholder=\"Ej: 8431234567890\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700\"\n      >\n        Agregar Producto\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductInventoryForm;\n","import React from 'react';\nimport { Inventario } from '../components/Inventario';\n\nconst ProductItem = ({ product, onEdit, onDelete, onAddToShoppingList }) => {\n  const calculateDaysLeft = () => {\n    if (!product.fecha_caducidad) return null;\n    const expiry = new Date(product.fecha_caducidad);\n    const today = new Date();\n    const diffTime = expiry - today;\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  const daysLeft = calculateDaysLeft();\n  let statusClass = '';\n  let statusText = '';\n\n  if (daysLeft !== null) {\n    if (daysLeft < 0) {\n      statusClass = 'bg-red-200 text-red-800';\n      statusText = 'Caducado';\n    } else if (daysLeft <= 3) {\n      statusClass = 'bg-yellow-200 text-yellow-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    } else if (daysLeft <= 7) {\n      statusClass = 'bg-blue-200 text-blue-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    }\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-4 mb-4\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias?.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones?.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caduca: {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n        \n        {statusText && (\n          <span className={`px-2 py-1 text-xs font-semibold rounded-full ${statusClass}`}>\n            {statusText}\n          </span>\n        )}\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onEdit(product)}\n          className=\"text-sm bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\"\n        >\n          Editar\n        </button>\n        <button\n          onClick={() => onDelete(product.id)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n        {daysLeft !== null && daysLeft <= 0 && (\n          <button\n            onClick={() => onAddToShoppingList(product.id)}\n            className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n          >\n            Añadir a compras\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;","import React from 'react';\nimport { useListaCompra } from '../hook/useListaCompra';\n//import { supabase } from '../utils/supabaseClient';\n\nconst ShoppingListItem = ({product, onTogglePurchased, onTogglePlus, onToggleMinus}) => {\n  const { lista, loading } = useListaCompra();\n\n  if (loading) return <p>Cargando lista de la compra...</p>;\n  if (lista.length === 0) return <p>No hay productos en tu cesta.</p>;\n  return (\n       \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-green-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <div className=\"mt-4 flex space-x-2\">\n            <p className=\"text-gray-600\">Cantidad:</p>\n            \n            <button\n              onClick={() => onToggleMinus(product)}\n              className=\"text-sm bg-yellow-500 text-white py-1 px-1 rounded hover:bg-yellow-600\"\n            >\n              ➖\n            </button>\n            <p>{product.cantidad}</p>\n            <button\n              onClick={() => onTogglePlus(product)}\n              className=\"text-sm bg-yellow-500 text-white py-1 px-1 rounded hover:bg-yellow-600\"\n            >\n              ➕​\n            </button>\n            \n            \n          </div>\n        </div>\n      </div>\n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onTogglePurchased(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Comprado\n        </button>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingListItem;\n","// src/hook/useListaCompra.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useListaCompra = () => {\r\n  const [lista, setLista] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLista = async () => {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('lista_compra')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error al obtener lista de compra:', error.message);\r\n      } else {\r\n        setLista(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchLista();\r\n  }, []);\r\n\r\n  return { lista, loading };\r\n};\r\n","import React from 'react';\nimport { useCaducados } from '../hook/useCaducados';\n//import { supabase } from '../utils/supabaseClient';\n\nconst ExpiredProductItem = ({product, onDelete, onAddToShoppingList}) => {\n  const { caducados, loading} = useCaducados();\n\n\n\n  if (loading) return <p>Cargando productos caducados...</p>;\n  if (caducados.length === 0) return <p>No hay productos caducados.</p>;\n  //console.log('Renderizando producto:', product);\n  return (\n    \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-red-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          \n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caducó el:{' '}\n              {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n\n        <span className=\"px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\n          Caducado\n        </span>\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onAddToShoppingList(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Añadir a compras\n        </button>\n        <button\n          onClick={() => onDelete(product)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default ExpiredProductItem;\n\n","// src/hook/useCaducados.js\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useCaducados = () => {\r\n  const [caducados, setCaducados] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchCaducados = async () => {\r\n    // Solo continuar si no hemos cargado antes\r\n    if (caducados.length > 0) return;\r\n\r\n    setLoading(true);\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    // Consulta SOLO los productos caducados\r\n    const { data: dataCaducados, error: errorCaducados } = await supabase\r\n      .from('caducados')\r\n      .select('*');\r\n   \r\n    if (errorCaducados) {\r\n      console.error('Error al cargar productos caducados:', errorCaducados);\r\n      setCaducados([]);\r\n    } else {\r\n      setCaducados(dataCaducados);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCaducados();\r\n  }, []);\r\n\r\n  return { caducados, loading, fetchCaducados, setCaducados };\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const SettingsModal = ({ isOpen, onClose }) => {\r\n  const [newCategoria, setNewCategoria] = useState('');\r\n  const [newUbicacion, setNewUbicacion] = useState('');\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const { data: categoriasData } = await supabase.from('categorias').select('*');\r\n    const { data: ubicacionesData } = await supabase.from('ubicaciones').select('*');\r\n    setCategorias(categoriasData || []);\r\n    setUbicaciones(ubicacionesData || []);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    if (isOpen) {\r\n      fetchData();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleAddCategoria = async () => {\r\n    if (newCategoria.trim() === '') return;\r\n    await supabase.from('categorias').insert([{ nombre: newCategoria.trim() }]);\r\n    setNewCategoria('');\r\n    fetchData();\r\n  };\r\n\r\n  const handleAddUbicacion = async () => {\r\n    if (newUbicacion.trim() === '') return;\r\n    await supabase.from('ubicaciones').insert([{ nombre: newUbicacion.trim() }]);\r\n    setNewUbicacion('');\r\n    fetchData();\r\n  };\r\n\r\n  const deleteCategoria = async (id) => {\r\n    await supabase.from('categorias').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n  const deleteUbicacion = async (id) => {\r\n    await supabase.from('ubicaciones').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md max-h-[90vh] flex flex-col\">\r\n        {/* <button\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\r\n        >\r\n          ✕\r\n        </button>*/}\r\n        {/* Encabezado */}\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800\">Ajustes</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-red-600 text-xl font-bold\">\r\n            &times;\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Contenido desplazable */}\r\n        <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n          {/* Tu formulario de añadir categoría/ubicación y las listas existentes */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir categoría */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Categoría</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCategoria}\r\n                  onChange={(e) => setNewCategoria(e.target.value)}\r\n                  className=\"w-full border border-gray-300 rounded text-gray-700 px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddCategoria}\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                >\r\n                  Añadir Categoría\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de categorías */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Categorías existentes</h3>\r\n              <ul className=\"space-y-1 mb-4\">\r\n                {categorias.map((cat) => (\r\n                  <li key={cat.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{cat.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteCategoria(cat.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir ubicación */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Ubicación</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newUbicacion}\r\n                  onChange={(e) => setNewUbicacion(e.target.value)}\r\n                  className=\"w-full border border-gray-300 text-gray-700 rounded px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddUbicacion}\r\n                  className=\"mt-2 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                >\r\n                  Añadir Ubicación\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de ubicaciones */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Ubicaciones existentes</h3>\r\n              <ul className=\"space-y-1\">\r\n                {ubicaciones.map((ubi) => (\r\n                  <li key={ubi.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{ubi.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteUbicacion(ubi.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        \r\n        {/* Pie opcional */}\r\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\r\n          © SmartFridge\r\n        </div>\r\n      </div>\r\n    </div> \r\n        \r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport ScanBarcodeButton from './components/ScanBarcodeButton';\nimport AddProductForm from './components/AddProductForm';\nimport AddProductInventoryForm from './components/AddProductInventoryForm';\nimport ProductItem from './components/ProductItem';\nimport ShoppingListItem from './components/ShoppingListItem';\nimport ExpiredProductItem from './components/ExpiredProductItem';\nimport { SettingsModal } from './components/SettingsModal';\nimport { supabase } from './utils/supabaseClient';\n\n\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [shoppingList, setShoppingList] = useState([]);\n  const [expiredProducts, setExpiredProducts] = useState([]);\n  const [activeTab, setActiveTab] = useState('inventory');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [showAddInventoryForm, setShowAddInventoryForm] = useState(false);\n  const [editingProductShopping, setEditingProductShopping] = useState(null);\n  const [codigoEscaneado, setCodigoEscaneado] = useState('');\n\n\n  \n  const fetchProducts = async () => {\n    const { data, error } = await supabase.from('productos').select(\"id, nombre, codigo_barras, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n    if (!error) {\n      setProducts(data);\n    }\n  };\n\n  const fetchExpiredProducts = async () => {\n    const { data, error } = await supabase\n      .from('caducados')\n      .select(\"id, nombre, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n\n    if (!error) {\n      setExpiredProducts(data);\n    }\n  };\n\n  const fetchShoppingList = async () => {\n    const { data, error } = await supabase\n      .from('lista_compra')\n      .select(\"*\");\n\n    if (!error) {\n      setShoppingList(data);\n    }\n  };\n\n  if (activeTab === 'shopping'){\n    fetchShoppingList();\n  }\n  if (activeTab === 'inventory'){\n    fetchProducts();\n  }\n  if (activeTab === 'expired'){\n    fetchExpiredProducts();\n  }\n\n  useEffect(() => {\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n    revisarProductosCaducados();\n  }, []);\n\n  // Efecto para manejar productos caducados\n  \n  const revisarProductosCaducados = async () => {\n    const now = new Date();\n\n    const { data: productos, error } = await supabase\n      .from('productos')\n      .select('*');\n\n    if (error) {\n      console.error('Error al obtener productos:', error.message);\n      return;\n    }\n\n    const caducados = productos.filter(p => new Date(p.fecha_caducidad) < now);\n    //const vigentes = productos.filter(p => new Date(p.fecha_caducidad) >= now);\n\n    // Eliminar los caducados del inventario\n    for (const producto of caducados) {\n      await supabase.from('productos').delete().eq('id', producto.id);\n    }\n\n    // Agregarlos a 'lista_compra' y 'caducados'\n    const nuevoId = Date.now().toString();\n    \n\n    for (const producto of caducados) {\n      // Obtener nombre de categoría\n      const { data: categoriaData } = await supabase\n        .from('categorias')\n        .select('nombre')\n        .eq('id', producto.categoria_id)\n        .single();\n\n      //const categoriaNombre = categoriaData?.nombre || '';\n\n      // Obtener nombre de ubicación\n      const { data: ubicacionData } = await supabase\n        .from('ubicaciones')\n        .select('nombre')\n        .eq('id', producto.ubicacion_id)\n        .single();\n\n      //const ubicacionNombre = ubicacionData?.nombre || '';\n\n      const { data: existe, error: errorExiste } = await supabase\n        .from('lista_compra')\n        .select('id')\n        .eq('codigo_barras', producto.codigo_barras)\n        .eq('es_caducado', true)\n        .maybeSingle();\n\n      if (!existe) {\n        \n        await supabase.from('lista_compra').insert([{\n          id: nuevoId,\n          ...producto,\n          es_caducado: true,\n        }]);\n      }\n\n\n      // Insertar en caducados\n      const yaExiste = await supabase\n        .from('caducados')\n        .select('id')\n        .eq('nombre', producto.nombre)\n        .eq('codigo_barras', producto.codigo_barras)\n        .eq('fecha_caducidad', producto.fecha_caducidad);\n\n      if (yaExiste.data.length === 0) {\n        await supabase.from('caducados').insert({\n          nombre: producto.nombre,\n          cantidad: producto.cantidad,\n          codigo_barras: producto.codigo_barras,\n          fecha_caducidad: producto.fecha_caducidad,\n          categoria_id: producto.categoria_id,\n          ubicacion_id: producto.ubicacion_id\n      });\n      }\n    }\n\n    // Recarga de estado tras limpieza\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n  };\n\n\n  const handleScan = (barcode) => {\n    setShowAddForm(true);\n    setEditingProduct({\n      name: '',\n      barcode,\n      quantity: 1,\n      category: 'otros',\n      location: 'despensa-estante1',\n      expiryDate: ''\n    });\n  };\n\n  const handleAddProduct = (newProduct) => {\n    if (editingProduct && editingProduct.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProduct.id ? { ...newProduct, id: editingProduct.id } : p\n      ));\n    } else {\n      // Añadir nuevo producto\n      setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchProducts();\n    setShowAddForm(false);\n    setEditingProduct(null);\n    revisarProductosCaducados();\n  };\n\n  const handleScanShopping = (codigo) => {\n    setCodigoEscaneado(codigo);\n    setShowAddInventoryForm(true);\n  };\n  \n  const handleAddInventoryProduct = (newProduct) => {\n    if (editingProductShopping && editingProductShopping.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProductShopping.id ? { ...newProduct, id: editingProductShopping.id } : p\n      ));\n    } else {\n    // Añadir nuevo producto a la lista de la compra.\n    setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchShoppingList();\n    setEditingProductShopping(null);\n    setShowAddInventoryForm(false);\n  };\n\n  const handleEditProduct = (producto) => {\n    console.log('📝 Editando producto:', producto);\n    setEditingProduct({\n      id: producto.id,               // 👈\n      name: producto.nombre,\n      barcode: producto.codigo_barras,\n      quantity: producto.cantidad,\n      expiryDate: producto.fecha_caducidad,\n      category: producto.categoria_id,\n      location: producto.ubicacion_id\n    });\n    setShowAddForm(true);\n  };\n\n\n  const handleDeleteProduct = async (productId) => {\n    const { error } = await supabase\n    .from('productos')\n    .delete()\n    .eq('id', productId);\n\n    if (error) {\n      console.error('❌ Error al eliminar producto:', error.message);\n      alert('❌ No se pudo eliminar el producto');\n    } else {\n      // Eliminarlo del estado para actualizar la vista\n      setProducts((prevProducts) => prevProducts.filter(p => p.id !== productId));\n    }\n    fetchProducts();\n  };\n  \n\n  const handleDeleteExpiredProduct = async (product) => {\n    const { error } = await supabase\n      .from('caducados')\n      .delete()\n      .eq('id', product.id);\n\n    if (!error) {\n      setExpiredProducts(prev => prev.filter(p => p.id !== product.id));\n    }\n    fetchExpiredProducts();\n  };\n\n  const handleAddToShoppingList = async (product) => {\n    const yaExiste = await supabase\n      .from('caducados')\n      .select('id')\n      .eq('nombre', product.nombre)\n      .eq('codigo_barras', product.codigo_barras)\n      .eq('fecha_caducidad', product.fecha_caducidad);\n\n    if (yaExiste.data.length === 0) {\n      await supabase.from('lista_compra').insert({\n        nombre: product.nombre,\n        cantidad: product.cantidad,\n        codigo_barras: product.codigo_barras,\n        fecha_caducidad: product.fecha_caducidad,\n        categoria_id: product.categoria_id,\n        ubicacion_id: product.ubicacion_id,\n        creado: product.created_at,\n        es_caducado: true\n      });\n    }\n  };\n\n  const handleAddManualItem = () => {\n    setShowAddInventoryForm(true);\n  };\n\n\n  const handleTogglePurchased = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .delete()\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n  const handleAddQuantity = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .update({ cantidad: product.cantidad + 1})\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n  const handleSubstractQuantity = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .update({ cantidad: product.cantidad - 1})\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n\n\n\n  const [mostrarAjustes, setMostrarAjustes] = useState(false);\n  \n\n  return (\n    <div className=\"min-h-screen bg-gray-800 p-4\">\n      <div className=\"max-w-6xl mx-auto bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"p-4 bg-blue-600 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">SmartFridge</h1>\n            <button\n              onClick={() => setMostrarAjustes(true)}\n              className=\"bg-gray-700 text-white px-3 py-2 rounded hover:bg-gray-700\"\n            >\n              ⚙️ Ajustes\n            </button>\n          </div>\n          \n          <p className=\"text-blue-100\">Control total de tu cocina</p>\n          \n\n          {mostrarAjustes && <SettingsModal onClose={() => setMostrarAjustes(false)} />}\n          \n        </div>\n        \n        <div className=\"flex border-b\">\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'inventory' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('inventory')}\n          >\n            Inventario 📋​\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'shopping' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('shopping')}\n          >\n            Lista de la compra 🛒\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'expired' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('expired')}\n          >\n            Caducados ({expiredProducts.length}) ☣️​\n          </button>\n        </div>\n        \n        <div className=\"p-4\">\n          {activeTab === 'inventory' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={handleScan} />\n                <button\n                  onClick={() => {\n                    setShowAddForm(true);\n                    setEditingProduct(null);\n                    fetchProducts();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Manualmente\n                </button>\n              </div>\n              \n              {showAddForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductForm onProductAdded={handleAddProduct} \n                    Inventario={editingProduct} \n                  />\n\n                  <button\n                    onClick={() => {\n                      setShowAddForm(false);\n                      setEditingProduct(null);\n                      fetchProducts();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              \n              <div className=\"space-y-4\">\n                {products.length === 0 ? (\n                  <p className=\"text-gray-500\">No hay productos en tu inventario. ¡Añade algunos!</p>\n                ) : (\n                  \n                  products.map(product => (\n                    <ProductItem\n                      key={product.id}\n                      product={product}\n                      onEdit={handleEditProduct}\n                      onDelete={handleDeleteProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                  \n                )}\n                \n              </div>\n            </>\n          ) : activeTab === 'shopping' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={(code) => {\n                  setCodigoEscaneado(code);\n                  setShowAddInventoryForm(true);\n                }} />\n                <button\n                  onClick={() => {\n                    setShowAddInventoryForm(true);\n                    setCodigoEscaneado('');\n                    setEditingProductShopping(null);\n                    fetchShoppingList();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Producto\n                </button>\n              </div>\n              {showAddInventoryForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductInventoryForm\n                    codigoInicial={codigoEscaneado}\n                    onProductAdded={() => {\n                      setShowAddInventoryForm(false);\n                      setCodigoEscaneado('');\n                      fetchShoppingList(); // si quieres refrescar después de añadir\n                    }}\n                  />\n                  <button\n                    onClick={() => {\n                      setShowAddInventoryForm(false);\n                      fetchShoppingList();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              <div className=\"space-y-4\">\n                \n                {shoppingList.length === 0 ? (\n                  <p className=\"text-gray-500\">Tu lista de la compra está vacía. ¡Añade algunos productos!</p>\n                ) : (\n                  shoppingList.map(product => (\n                    <ShoppingListItem\n                      key={product.id}\n                      product={product}\n                      onTogglePurchased={handleTogglePurchased}\n                      onTogglePlus={handleAddQuantity}\n                      onToggleMinus={handleSubstractQuantity}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              <h2 className=\"text-xl font-semibold mb-4\">Productos Caducados</h2>\n              \n              <div className=\"space-y-4\">\n                {expiredProducts.length === 0 ? (\n                  <p className=\"text-gray-500\">¡Genial! No tienes productos caducados.</p>\n                ) : (\n                  \n                  expiredProducts.map(product => (\n                    <ExpiredProductItem\n                      key={product.id}\n                      product={product}\n                      onDelete={handleDeleteExpiredProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          )}\n        </div>\n        {/* Pie opcional */}\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\n          © SmartFridge\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  //<StrictMode>\n  <App />\n  //</StrictMode>\n);"],"sourceRoot":""}