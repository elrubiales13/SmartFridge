{"version":3,"sources":["utils/supabaseClient.js","components/Inventario.js","components/ScanBarcodeButton.js","hook/useSupabaseData.js","components/AddProductForm.js","components/AddProductInventoryForm.js","components/ProductItem.js","components/ShoppingListItem.js","hook/useListaCompra.js","components/ExpiredProductItem.js","hook/useCaducados.js","utils/productHelpers.js","components/SettingsModal.js","App.js","index.js"],"names":["supabase","createClient","Inventario","ScanBarcodeButton","_ref","onScan","isScanning","setIsScanning","useState","status","setStatus","videoRef","useRef","handleDetected","result","code","codeResult","concat","stopScanner","Quagga","offDetected","stop","useEffect","React","createElement","className","onClick","startScanner","setTimeout","init","inputStream","type","target","current","document","querySelector","constraints","width","height","facingMode","decoder","readers","err","console","error","start","onDetected","ref","id","useSupabaseData","table","data","setData","loading","setLoading","async","from","select","fetchData","AddProductForm","onProductAdded","product","setProduct","name","barcode","quantity","category","location","expiryDate","handleChange","e","value","prev","_objectSpread","[object Object]","categorias","ubicaciones","onSubmit","preventDefault","productoParaGuardar","nombre","codigo_barras","fecha_caducidad","categoria_id","ubicacion_id","cantidad","update","eq","insert","message","alert","onChange","required","min","map","cat","key","ubi","ProductItem","_product$categorias","_product$ubicaciones","onEdit","onDelete","onAddToShoppingList","daysLeft","calculateDaysLeft","diffTime","Date","Math","ceil","statusClass","statusText","toLocaleDateString","ShoppingListItem","onTogglePurchased","lista","useListaCompra","setLista","order","ascending","fetchLista","length","ExpiredProductItem","caducados","useCaducados","setCaducados","fetchCaducados","toISOString","split","dataCaducados","errorCaducados","SettingsModal","isOpen","onClose","newCategoria","setNewCategoria","newUbicacion","setNewUbicacion","setCategorias","setUbicaciones","categoriasData","ubicacionesData","trim","delete","deleteCategoria","deleteUbicacion","App","products","setProducts","shoppingList","setShoppingList","expiredProducts","setExpiredProducts","activeTab","setActiveTab","showAddForm","setShowAddForm","editingProduct","setEditingProduct","showAddInventoryForm","setShowAddInventoryForm","fetchProducts","fetchExpiredProducts","fetchShoppingList","now","productos","filter","p","producto","nuevoId","toString","categoriaData","single","ubicacionData","existe","errorExiste","maybeSingle","es_caducado","revisarProductosCaducados","handleEditProduct","log","categoria","ubicacion","handleDeleteProduct","productId","prevProducts","handleDeleteExpiredProduct","handleAddToShoppingList","creado","created_at","handleTogglePurchased","i","mostrarAjustes","setMostrarAjustes","Fragment","newProduct","handleAddManualItem","purchased","AddProductInventoryForm","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.c9d93e05.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://qhfungoeldemkcnpqaiu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFoZnVuZ29lbGRlbWtjbnBxYWl1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg0OTIxNDEsImV4cCI6MjA2NDA2ODE0MX0.Cyy4kZm1rGvgez19hZWY1qQ7JwxcF__doLMqYl6Qa9E';\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nconst Inventario = () => {\r\n  const [productos, setProductos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProductos = async () => {\r\n      const { data, error } = await supabase.from('productos').select('*, categorias (nombre), ubicaciones (nombre)');\r\n      if (error) console.error('Error al obtener productos:', error.message);\r\n      else setProductos(data);\r\n    };\r\n\r\n    fetchProductos();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl font-bold mb-4\">Inventario</h2>\r\n      <ul>\r\n        {productos.map((p) => (\r\n          <li key={p.id}>\r\n            {p.nombre} - {p.cantidad} unidades - {p.categorias?.nombre} - {p.ubicaciones?.nombre} - caduca: {p.fecha_caducidad}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventario;\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport Quagga from 'quagga';\n\n  const ScanBarcodeButton = ({ onScan }) => {\n    const [isScanning, setIsScanning] = useState(false);\n    const [status, setStatus] = useState('');\n    const videoRef = useRef(null);\n\n    const startScanner = () => {\n    setIsScanning(true);\n    setStatus('Iniciando escáner...');\n\n    setTimeout(() => {\n      Quagga.init({\n        inputStream: {\n          type: 'LiveStream',\n          target: videoRef.current || document.querySelector('#video'),\n          constraints: {\n            width: 640,\n            height: 480,\n            facingMode: 'environment'\n          }\n        },\n        decoder: {\n          readers: ['ean_reader', 'code_128_reader', 'upc_reader']\n        }\n      }, (err) => {\n        if (err) {\n          console.error(err);\n          setStatus('Error al iniciar el escáner');\n          return;\n        }\n        Quagga.start();\n        setStatus('Escaneando...');\n      });\n\n      Quagga.onDetected(handleDetected);\n    }, 500); // Esperamos medio segundo para asegurar que el DOM esté listo\n  };\n\n  const handleDetected = (result) => {\n    const code = result.codeResult.code;\n    setStatus(`Código detectado: ${code}`);\n    onScan(code);\n    stopScanner();\n  };\n\n  const stopScanner = () => {\n    Quagga.offDetected(handleDetected);\n    Quagga.stop();\n    setIsScanning(false);\n    setStatus('');\n  };\n\n  useEffect(() => {\n    return () => {\n      if (isScanning) stopScanner();\n    };\n  }, [isScanning]);\n\n  return (\n    <div className=\"relative\">\n      <button \n        onClick={isScanning ? stopScanner : startScanner}\n        className={`py-2 px-4 rounded-lg transition-colors ${\n          isScanning \n            ? 'bg-red-500 hover:bg-red-600 text-white'\n            : 'bg-blue-500 hover:bg-blue-600 text-white'\n        }`}\n      >\n        {isScanning ? 'Cancelar Escaneo' : 'Escanear Código'}\n      </button>\n\n      <div className=\"text-sm text-gray-600 mt-1\">{status}</div>\n\n      {isScanning && (\n        <div className=\"fixed inset-0 bg-black z-50 flex flex-col items-center justify-center p-4\">\n          <div className=\"w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h2 className=\"text-lg font-bold text-white\">Escáner de Códigos</h2>\n              <button \n                onClick={stopScanner}\n                className=\"text-white text-xl p-2\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div\n              ref={videoRef}\n              className=\"relative w-full h-64 bg-black rounded-lg overflow-hidden\"\n              id=\"video\"\n            />\n\n            <div className=\"mt-4 text-center text-white\">\n              <p>Enfoca el código de barras dentro del cuadro</p>\n              <p className=\"text-yellow-300 font-medium mt-2\">{status}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScanBarcodeButton;\n","// src/hooks/useSupabaseData.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useSupabaseData = (table) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data, error } = await supabase.from(table).select('*');\r\n      if (error) console.error(error);\r\n      else setData(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [table]);\r\n\r\n  return { data, loading };\r\n};\r\n","import React, { useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n//import { Inventario } from '../components/Inventario';\nimport { useSupabaseData } from '../hook/useSupabaseData';\n\n\nconst AddProductForm = ({ onProductAdded, Inventario = null }) => {\n\n  const [product, setProduct] = useState(Inventario || {\n    name: '',\n    barcode: '',\n    quantity: 1,\n    category: '', // ID categoria\n    location: '', // ID ubicacion\n    expiryDate: ''\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    //const categoriaSeleccionada = categorias.find(cat => cat.nombre === product.category);\n    //const ubicacionSeleccionada = ubicaciones.find(ubi => ubi.nombre === product.location)\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      fecha_caducidad: product.expiryDate,\n      categoria_id: product.category,\n      ubicacion_id: product.location,\n      cantidad: product.quantity\n    };\n\n    //const { error } = await supabase.from('productos').insert([productoParaGuardar]);\n    let error;\n\n    if (product.id) {\n      // Si existe ID, actualizamos el producto\n      ({ error } = await supabase\n        .from('productos')\n        .update(productoParaGuardar)\n        .eq('id', product.id));\n    } else {\n      // Si no, lo insertamos como nuevo\n      ({ error } = await supabase\n        .from('productos')\n        .insert([productoParaGuardar]));\n    }\n\n    if (error) {\n      console.error('❌ Error al guardar:', error.message);\n      alert('❌ Error al guardar el producto');\n    } else {\n      //alert('✅ Producto guardado correctamente');\n      if (onProductAdded) {\n        onProductAdded();\n      }\n      setProduct({\n        name: '',\n        barcode: '',\n        quantity: 1,\n        category: '',\n        location: '',\n        expiryDate: ''\n      });\n    }\n  };\n\n\n  const { data: categorias } = useSupabaseData('categorias');\n  const { data: ubicaciones } = useSupabaseData('ubicaciones');\n\n  \n  \n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        \n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Categoría</label>\n        <select\n          name=\"category\"\n          value={product.category}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        >\n          <option value=\"\">Seleccione una categoría</option>\n          {categorias.map((cat) => (\n            <option key={cat.id} value={cat.id}>\n              {cat.nombre}\n            </option>\n          ))}\n        </select>\n\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Ubicación</label>\n        <select\n          name=\"location\"\n          value={product.location}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        >\n          <option value=\"\">Seleccione una ubicación</option>\n          {ubicaciones.map((ubi) => (\n            <option key={ubi.id} value={ubi.id}>\n              {ubi.nombre}\n            </option>\n          ))}\n        </select>\n\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Fecha de Caducidad</label>\n        <input\n          type=\"date\"\n          name=\"expiryDate\"\n          value={product.expiryDate}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n      >\n        {Inventario ? 'Actualizar Producto' : 'Agregar Producto'}\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductForm;","import React, { useState } from 'react';\nimport { supabase } from '../utils/supabaseClient';\n//import { useSupabaseData } from '../hook/useSupabaseData';\n\n\nconst AddProductForm = ({ onProductAdded }) => {\n\n  const [product, setProduct] = useState({\n    name: '',\n    barcode: '',\n    quantity: 1\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const productoParaGuardar = {\n      nombre: product.name,\n      codigo_barras: product.barcode,\n      cantidad: product.quantity\n    };\n\n    let error;\n\n    if (product) {\n      // Si existe ID, actualizamos el producto\n      ({ error } = await supabase\n        .from('lista_compra')\n        .insert([productoParaGuardar]));\n    }\n\n    if (error) {\n      console.error('❌ Error al guardar:', error.message);\n      alert('❌ Error al guardar el producto');\n    } else {\n      //alert('✅ Producto guardado correctamente');\n      if (onProductAdded) {\n        onProductAdded();\n      }\n      setProduct({\n        name: '',\n        barcode: '',\n        quantity: 1\n      });\n    }\n  };\n  \n  \n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        \n        <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={handleChange}\n          required\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Código de Barras</label>\n        <input\n          type=\"text\"\n          name=\"barcode\"\n          value={product.barcode}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700\">Cantidad</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={product.quantity}\n          onChange={handleChange}\n          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n      \n      \n      \n      \n      <button\n        type=\"submit\"\n        className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n      >\n        Agregar Producto\n      </button>\n    </form>\n  );\n};\n\nexport default AddProductForm;","import React from 'react';\nimport { Inventario } from '../components/Inventario';\n\nconst ProductItem = ({ product, onEdit, onDelete, onAddToShoppingList }) => {\n  const calculateDaysLeft = () => {\n    if (!product.expiryDate) return null;\n    const expiry = new Date(product.expiryDate);\n    const today = new Date();\n    const diffTime = expiry - today;\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  const daysLeft = calculateDaysLeft();\n  let statusClass = '';\n  let statusText = '';\n\n  if (daysLeft !== null) {\n    if (daysLeft < 0) {\n      statusClass = 'bg-red-100 text-red-800';\n      statusText = 'Caducado';\n    } else if (daysLeft <= 3) {\n      statusClass = 'bg-yellow-100 text-yellow-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    } else if (daysLeft <= 7) {\n      statusClass = 'bg-blue-100 text-blue-800';\n      statusText = `Caduca en ${daysLeft} días`;\n    }\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-4 mb-4\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias?.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones?.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caduca: {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n        \n        {statusText && (\n          <span className={`px-2 py-1 text-xs font-semibold rounded-full ${statusClass}`}>\n            {statusText}\n          </span>\n        )}\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onEdit(product)}\n          className=\"text-sm bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600\"\n        >\n          Editar\n        </button>\n        <button\n          onClick={() => onDelete(product.id)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n        {daysLeft !== null && daysLeft <= 0 && (\n          <button\n            onClick={() => onAddToShoppingList(product.id)}\n            className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n          >\n            Añadir a compras\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;","import React from 'react';\nimport { useListaCompra } from '../hook/useListaCompra';\nimport { supabase } from '../utils/supabaseClient';\n\nconst ShoppingListItem = ({product, onTogglePurchased}) => {\n  const { lista, loading } = useListaCompra();\n\n  if (loading) return <p>Cargando lista de la compra...</p>;\n  if (lista.length === 0) return <p>No hay productos en tu cesta.</p>;\n  return (\n       \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-green-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n        </div>\n      </div>\n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onTogglePurchased(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Comprado\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingListItem;\n","// src/hook/useListaCompra.js\r\nimport { useEffect, useState } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useListaCompra = () => {\r\n  const [lista, setLista] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLista = async () => {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('lista_compra')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error al obtener lista de compra:', error.message);\r\n      } else {\r\n        setLista(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchLista();\r\n  }, []);\r\n\r\n  return { lista, loading };\r\n};\r\n","import React from 'react';\nimport { useCaducados } from '../hook/useCaducados';\nimport { supabase } from '../utils/supabaseClient';\n\nconst ExpiredProductItem = ({product, onDelete, onAddToShoppingList}) => {\n  const { caducados, loading} = useCaducados();\n\n\n\n  if (loading) return <p>Cargando productos caducados...</p>;\n  if (caducados.length === 0) return <p>No hay productos caducados.</p>;\n  //console.log('Renderizando producto:', product);\n  return (\n    \n    <div className=\"bg-white shadow rounded-lg p-4 mb-4 border-l-4 border-red-500\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          \n          <h3 className=\"font-medium text-lg\">{product.nombre}</h3>\n          <p className=\"text-gray-600\">Cantidad: {product.cantidad}</p>\n          <p className=\"text-gray-600\">Categoría: {product.categorias.nombre}</p>\n          <p className=\"text-gray-600\">Ubicación: {product.ubicaciones.nombre}</p>\n          {product.fecha_caducidad && (\n            <p className=\"text-gray-600\">\n              Caducó el:{' '}\n              {new Date(product.fecha_caducidad).toLocaleDateString()}\n            </p>\n          )}\n        </div>\n\n        <span className=\"px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800\">\n          Caducado\n        </span>\n      </div>\n      \n      <div className=\"mt-4 flex space-x-2\">\n        <button\n          onClick={() => onAddToShoppingList(product)}\n          className=\"text-sm bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600\"\n        >\n          Añadir a compras\n        </button>\n        <button\n          onClick={() => onDelete(product)}\n          className=\"text-sm bg-red-500 text-white py-1 px-3 rounded hover:bg-red-600\"\n        >\n          Eliminar\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default ExpiredProductItem;\n\n","// src/hook/useCaducados.js\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const useCaducados = () => {\r\n  const [caducados, setCaducados] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchCaducados = async () => {\r\n    // Solo continuar si no hemos cargado antes\r\n    if (caducados.length > 0) return;\r\n\r\n    setLoading(true);\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    // Consulta SOLO los productos caducados\r\n    const { data: dataCaducados, error: errorCaducados } = await supabase\r\n      .from('caducados')\r\n      .select('*');\r\n   \r\n    if (errorCaducados) {\r\n      console.error('Error al cargar productos caducados:', errorCaducados);\r\n      setCaducados([]);\r\n    } else {\r\n      setCaducados(dataCaducados);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCaducados();\r\n  }, []);\r\n\r\n  return { caducados, loading, fetchCaducados, setCaducados };\r\n};\r\n\r\n","export const addDays = (date, days) => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nexport const formatDate = (dateString) => {\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nexport const calculateDaysLeft = (expiryDate) => {\n  if (!expiryDate) return null;\n  const expiry = new Date(expiryDate);\n  const today = new Date();\n  const diffTime = expiry - today;\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n};","import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nexport const SettingsModal = ({ isOpen, onClose }) => {\r\n  const [newCategoria, setNewCategoria] = useState('');\r\n  const [newUbicacion, setNewUbicacion] = useState('');\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [ubicaciones, setUbicaciones] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const { data: categoriasData } = await supabase.from('categorias').select('*');\r\n    const { data: ubicacionesData } = await supabase.from('ubicaciones').select('*');\r\n    setCategorias(categoriasData || []);\r\n    setUbicaciones(ubicacionesData || []);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    if (isOpen) {\r\n      fetchData();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleAddCategoria = async () => {\r\n    if (newCategoria.trim() === '') return;\r\n    await supabase.from('categorias').insert([{ nombre: newCategoria.trim() }]);\r\n    setNewCategoria('');\r\n    fetchData();\r\n  };\r\n\r\n  const handleAddUbicacion = async () => {\r\n    if (newUbicacion.trim() === '') return;\r\n    await supabase.from('ubicaciones').insert([{ nombre: newUbicacion.trim() }]);\r\n    setNewUbicacion('');\r\n    fetchData();\r\n  };\r\n\r\n  const deleteCategoria = async (id) => {\r\n    await supabase.from('categorias').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n  const deleteUbicacion = async (id) => {\r\n    await supabase.from('ubicaciones').delete().eq('id', id);\r\n    fetchData();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md max-h-[90vh] flex flex-col\">\r\n        {/* <button\r\n          onClick={onClose}\r\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-black\"\r\n        >\r\n          ✕\r\n        </button>*/}\r\n        {/* Encabezado */}\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800\">Ajustes</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-red-600 text-xl font-bold\">\r\n            &times;\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Contenido desplazable */}\r\n        <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n          {/* Tu formulario de añadir categoría/ubicación y las listas existentes */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir categoría */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Categoría</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCategoria}\r\n                  onChange={(e) => setNewCategoria(e.target.value)}\r\n                  className=\"w-full border border-gray-300 rounded text-gray-700 px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddCategoria}\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                >\r\n                  Añadir Categoría\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de categorías */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Categorías existentes</h3>\r\n              <ul className=\"space-y-1 mb-4\">\r\n                {categorias.map((cat) => (\r\n                  <li key={cat.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{cat.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteCategoria(cat.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div className=\"overflow-y-auto p-4 space-y-4 flex-1\">\r\n              {/* Añadir ubicación */}\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-1 text-sm font-medium text-gray-700\">Nueva Ubicación</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newUbicacion}\r\n                  onChange={(e) => setNewUbicacion(e.target.value)}\r\n                  className=\"w-full border border-gray-300 text-gray-700 rounded px-3 py-2\"\r\n                />\r\n                <button\r\n                  onClick={handleAddUbicacion}\r\n                  className=\"mt-2 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                >\r\n                  Añadir Ubicación\r\n                </button>\r\n              </div>\r\n\r\n              {/* Lista de ubicaciones */}\r\n              <h3 className=\"text-md font-semibold text-gray-700 mt-4 mb-1\">Ubicaciones existentes</h3>\r\n              <ul className=\"space-y-1\">\r\n                {ubicaciones.map((ubi) => (\r\n                  <li key={ubi.id} className=\"flex justify-between text-gray-700 items-center border-b py-1\">\r\n                    <span className='px-2'>{ubi.nombre}</span>\r\n                    <button\r\n                      onClick={() => deleteUbicacion(ubi.id)}\r\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        \r\n        {/* Pie opcional */}\r\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\r\n          © SmartFridge\r\n        </div>\r\n      </div>\r\n    </div> \r\n        \r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Inventario from './components/Inventario';\nimport ScanBarcodeButton from './components/ScanBarcodeButton';\nimport AddProductForm from './components/AddProductForm';\nimport AddProductInventoryForm from './components/AddProductInventoryForm';\nimport ProductItem from './components/ProductItem';\nimport ShoppingListItem from './components/ShoppingListItem';\nimport ExpiredProductItem from './components/ExpiredProductItem';\nimport { calculateDaysLeft } from './utils/productHelpers';\nimport { SettingsModal } from './components/SettingsModal';\nimport { supabase } from './utils/supabaseClient';\n\n\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [shoppingList, setShoppingList] = useState([]);\n  const [expiredProducts, setExpiredProducts] = useState([]);\n  const [activeTab, setActiveTab] = useState('inventory');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [showAddInventoryForm, setShowAddInventoryForm] = useState(false);\n\n  \n  const fetchProducts = async () => {\n    const { data, error } = await supabase.from('productos').select(\"id, nombre, codigo_barras, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n    if (!error) {\n      setProducts(data);\n    }\n  };\n\n  const fetchExpiredProducts = async () => {\n    const { data, error } = await supabase\n      .from('caducados')\n      .select(\"id, nombre, cantidad, fecha_caducidad, categorias (nombre), ubicaciones (nombre)\");\n\n    if (!error) {\n      setExpiredProducts(data);\n    }\n  };\n\n  const fetchShoppingList = async () => {\n    const { data, error } = await supabase\n      .from('lista_compra')\n      .select(\"*\");\n\n    if (!error) {\n      setShoppingList(data);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchProducts();\n    fetchExpiredProducts();\n    fetchShoppingList();\n    \n  }, []);\n\n  // Efecto para manejar productos caducados\n  useEffect(() => {\n    const revisarProductosCaducados = async () => {\n      const now = new Date();\n\n      const { data: productos, error } = await supabase\n        .from('productos')\n        .select('*');\n\n      if (error) {\n        console.error('Error al obtener productos:', error.message);\n        return;\n      }\n\n      const caducados = productos.filter(p => new Date(p.fecha_caducidad) < now);\n      const vigentes = productos.filter(p => new Date(p.fecha_caducidad) >= now);\n\n      // Eliminar los caducados del inventario\n      for (const producto of caducados) {\n        await supabase.from('productos').delete().eq('id', producto.id);\n      }\n\n      // Agregarlos a 'lista_compra' y 'caducados'\n      const nuevoId = Date.now().toString();\n      \n\n      for (const producto of caducados) {\n        // Obtener nombre de categoría\n        const { data: categoriaData } = await supabase\n          .from('categorias')\n          .select('nombre')\n          .eq('id', producto.categoria_id)\n          .single();\n\n        const categoriaNombre = categoriaData?.nombre || '';\n\n        // Obtener nombre de ubicación\n        const { data: ubicacionData } = await supabase\n          .from('ubicaciones')\n          .select('nombre')\n          .eq('id', producto.ubicacion_id)\n          .single();\n\n        const ubicacionNombre = ubicacionData?.nombre || '';\n        const { data: existe, error: errorExiste } = await supabase\n          .from('lista_compra')\n          .select('id')\n          .eq('codigo_barras', producto.codigo_barras)\n          .eq('es_caducado', true)\n          .maybeSingle();\n\n        if (!existe) {\n          \n          await supabase.from('lista_compra').insert([{\n            id: nuevoId,\n            ...producto,\n            es_caducado: true,\n          }]);\n        }\n\n\n        // Insertar en caducados\n        const yaExiste = await supabase\n          .from('caducados')\n          .select('id')\n          .eq('nombre', producto.nombre)\n          .eq('codigo_barras', producto.codigo_barras)\n          .eq('fecha_caducidad', producto.fecha_caducidad);\n\n        if (yaExiste.data.length === 0) {\n          await supabase.from('caducados').insert({\n            nombre: producto.nombre,\n            cantidad: producto.cantidad,\n            codigo_barras: producto.codigo_barras,\n            fecha_caducidad: producto.fecha_caducidad,\n            categoria_id: producto.categoria_id,\n            ubicacion_id: producto.ubicacion_id\n        });\n        }\n      }\n\n      // Recarga de estado tras limpieza\n      fetchProducts();\n      fetchExpiredProducts();\n      fetchShoppingList();\n    };\n\n    revisarProductosCaducados();\n  }, []);\n\n\n  const handleScan = (barcode) => {\n    setShowAddForm(true);\n    setEditingProduct({\n      name: '',\n      barcode,\n      quantity: 1,\n      category: 'otros',\n      location: 'despensa-estante1',\n      expiryDate: ''\n    });\n  };\n\n  const handleAddProduct = (newProduct) => {\n    if (editingProduct && editingProduct.id) {\n      // Actualizar producto existente\n      setProducts(products.map(p => \n        p.id === editingProduct.id ? { ...newProduct, id: editingProduct.id } : p\n      ));\n    } else {\n      // Añadir nuevo producto\n      setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n    }\n    fetchProducts();\n    setShowAddForm(false);\n    setEditingProduct(null);\n  };\n\n  const handleAddInventoryProduct = (newProduct) => {\n\n    // Añadir nuevo producto a la lista de la compra.\n    setProducts([...products, { ...newProduct, id: Date.now().toString() }]);\n  \n    fetchShoppingList();\n    setShowAddInventoryForm(false);\n  };\n\n  const handleEditProduct = (product) => {\n    console.log('📝 Editando producto:', product);\n    setEditingProduct({\n    ...product,\n    name: product.nombre,\n    barcode: product.codigo_barras,\n    quantity: product.cantidad,\n    expiryDate: product.fecha_caducidad,\n    category: product.categoria,\n    location: product.ubicacion\n    });\n    setShowAddForm(true);\n  };\n\n  const handleDeleteProduct = async (productId) => {\n    const { error } = await supabase\n    .from('productos')\n    .delete()\n    .eq('id', productId);\n\n    if (error) {\n      console.error('❌ Error al eliminar producto:', error.message);\n      alert('❌ No se pudo eliminar el producto');\n    } else {\n      // Eliminarlo del estado para actualizar la vista\n      setProducts((prevProducts) => prevProducts.filter(p => p.id !== productId));\n    }\n    fetchProducts();\n  };\n  \n\n  const handleDeleteExpiredProduct = async (product) => {\n    const { error } = await supabase\n      .from('caducados')\n      .delete()\n      .eq('id', product.id);\n\n    if (!error) {\n      setExpiredProducts(prev => prev.filter(p => p.id !== product.id));\n    }\n    fetchExpiredProducts();\n  };\n\n  const handleAddToShoppingList = async (product) => {\n    const yaExiste = await supabase\n      .from('caducados')\n      .select('id')\n      .eq('nombre', product.nombre)\n      .eq('codigo_barras', product.codigo_barras)\n      .eq('fecha_caducidad', product.fecha_caducidad);\n\n    if (yaExiste.data.length === 0) {\n      await supabase.from('lista_compra').insert({\n        nombre: product.nombre,\n        cantidad: product.cantidad,\n        codigo_barras: product.codigo_barras,\n        fecha_caducidad: product.fecha_caducidad,\n        categoria_id: product.categoria_id,\n        ubicacion_id: product.ubicacion_id,\n        creado: product.created_at,\n        es_caducado: true\n      });\n    }\n  };\n\n  const handleAddManualItem = () => {\n    setShowAddInventoryForm(true);\n  };\n\n\n  const handleTogglePurchased = async (product) => {\n    const { error } = await supabase\n      .from('lista_compra')\n      .delete()\n      .eq('id', product.id);\n    if (!error) {\n    setShoppingList(shoppingList.filter(i => i.id !== product.id));\n    }\n    fetchShoppingList();\n  };\n\n  const [mostrarAjustes, setMostrarAjustes] = useState(false);\n  \n\n  return (\n    <div className=\"min-h-screen bg-gray-800 p-4\">\n      <div className=\"max-w-6xl mx-auto bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"p-4 bg-blue-600 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold\">SmartFridge</h1>\n            <button\n              onClick={() => setMostrarAjustes(true)}\n              className=\"bg-gray-700 text-white px-3 py-2 rounded hover:bg-gray-700\"\n            >\n              ⚙️ Ajustes\n            </button>\n          </div>\n          \n          <p className=\"text-blue-100\">Control total de tu cocina</p>\n          \n\n          {mostrarAjustes && <SettingsModal onClose={() => setMostrarAjustes(false)} />}\n          \n        </div>\n        \n        <div className=\"flex border-b\">\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'inventory' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('inventory')}\n          >\n            Inventario\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'shopping' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('shopping')}\n          >\n            Lista de la compra\n          </button>\n          <button\n            className={`flex-1 py-2 px-4 font-medium ${activeTab === 'expired' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}\n            onClick={() => setActiveTab('expired')}\n          >\n            Caducados ({expiredProducts.length})\n          </button>\n        </div>\n        \n        <div className=\"p-4\">\n          {activeTab === 'inventory' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <ScanBarcodeButton onScan={handleScan} />\n                <button\n                  onClick={() => {\n                    setShowAddForm(true);\n                    setEditingProduct(null);\n                    fetchProducts();\n                  }}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Manualmente\n                </button>\n              </div>\n              \n              {showAddForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductForm onProductAdded={handleAddProduct} \n                    Inventario={editingProduct} \n                  />\n\n                  <button\n                    onClick={() => {\n                      setShowAddForm(false);\n                      setEditingProduct(null);\n                      fetchProducts();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              \n              <div className=\"space-y-4\">\n                {products.length === 0 ? (\n                  <p className=\"text-gray-500\">No hay productos en tu inventario. ¡Añade algunos!</p>\n                ) : (\n                  \n                  products.map(product => (\n                    <ProductItem\n                      key={product.id}\n                      product={product}\n                      onEdit={handleEditProduct}\n                      onDelete={handleDeleteProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                  \n                )}\n                \n              </div>\n            </>\n          ) : activeTab === 'shopping' ? (\n            <>\n              <div className=\"flex space-x-2 mb-4\">\n                <button\n                  onClick={handleAddManualItem}\n                  className=\"bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors\"\n                >\n                  Añadir Producto\n                </button>\n                \n                <ScanBarcodeButton \n                  onScan={(barcode) => {\n                    setShoppingList([\n                      ...shoppingList,\n                      {\n                        id: Date.now().toString(),\n                        name: `Producto ${barcode}`,\n                        barcode,\n                        quantity: 1,\n                        purchased: false\n                      }\n                    ]);\n                  }}\n                />\n              </div>\n              {showAddInventoryForm && (\n                <div className=\"mb-6 p-4 border rounded-lg bg-gray-50\">\n                  <AddProductInventoryForm onProductAdded={handleAddInventoryProduct} />\n\n                  <button\n                    onClick={() => {\n                      setShowAddInventoryForm(false);\n                      fetchShoppingList();\n                    }}\n                    className=\"mt-2 text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n              <div className=\"space-y-4\">\n                {shoppingList.length === 0 ? (\n                  <p className=\"text-gray-500\">Tu lista de la compra está vacía. ¡Añade algunos productos!</p>\n                ) : (\n                  shoppingList.map(product => (\n                    <ShoppingListItem\n                      key={product.id}\n                      product={product}\n                      onTogglePurchased={handleTogglePurchased}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          ) : (\n            <>\n              <h2 className=\"text-xl font-semibold mb-4\">Productos Caducados</h2>\n              \n              <div className=\"space-y-4\">\n                {expiredProducts.length === 0 ? (\n                  <p className=\"text-gray-500\">¡Genial! No tienes productos caducados.</p>\n                ) : (\n                  \n                  expiredProducts.map(product => (\n                    <ExpiredProductItem\n                      key={product.id}\n                      product={product}\n                      onDelete={handleDeleteExpiredProduct}\n                      onAddToShoppingList={handleAddToShoppingList}\n                    />\n                  ))\n                )}\n              </div>\n            </>\n          )}\n        </div>\n        {/* Pie opcional */}\n        <div className=\"p-2 border-t text-center text-sm text-gray-400\">\n          © SmartFridge\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  //<StrictMode>\n  <App />\n  //</StrictMode>\n);"],"sourceRoot":""}